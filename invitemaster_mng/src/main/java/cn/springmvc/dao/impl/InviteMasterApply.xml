<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">     
<mapper namespace="InviteMasterApply"> 
    <resultMap type = "cn.invitemastermng.model.InviteMasterApplyEntity" id = "resultInviteMasterApply">
        <id property = "imApplyID"				column = "Im_Apply_ID" />
		<result property = "memberID"       	column = "Member_ID" />
		<result property = "applyDate"    	    column = "Apply_Date" />
		<result property = "checkStatu"  	    column = "Check_Statu" />
		<result property = "checkDate" 	        column = "Check_Date" /> 
    </resultMap> 
    <insert id="insertInviteMasterApply" parameterType="Map">
      insert InviteMaster_Apply (Im_Apply_ID , Member_ID)
                         values (#{imApplyID},#{memberID})
    </insert>
    <select id="selectInviteMasterApplyIsExist" parameterType="long" resultType="int">
       select count(Im_Apply_ID) from  InviteMaster_Apply where  Member_ID = #{memberID} and Check_Statu !=-1
    </select>
    
    <!--            推荐达人提奖记录 -->
    <select id="getInviteMasterAwardRecord" parameterType="product_p2p.kit.pageselect.PageEntity"
     resultType = "cn.invitemastermng.model.InviteMasterAwardRecordEntity">
      select
		bmi.Logname as logname,
		CASE
			WHEN bmi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			WHEN bmi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		END memberName	 ,
		(select ifnull(sum(pbi.Real_amount),0) from  Project_App_Record par 
		left join Project_Base_Info pbi on par.Project_Base_ID = pbi.Project_Base_ID
		left join Project_App_Process pap on pap.Apply_ID = par.Apply_ID
		where par.member_ID = bmi.Member_ID and par.Invest_Statu >= 3
		and mfp.Record_Date &lt;pap.Record_Date and ( pap.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		  <if test="map.startTime != null and map.startTime !=''">
		    and pap.Hold_Date > #{map.startTime}
		  </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and pap.Hold_Date &lt; #{map.endTime}
		  </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(pap.Hold_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(pap.Hold_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(pap.Hold_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(pap.Hold_Date)
		  </if>
		  
		) as loanTotalAmount,
		
		(select ifnull(sum(CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{map.skey})) as signed)),0)  from invest_record ir 
		 where ir.Member_ID= bmi.Member_ID and ir.IsValid = 0
		 and mfp.Record_Date &lt;ir.Invest_Date and (ir.Invest_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		  <if test="map.startTime != null and map.startTime !=''">
		    and ir.Invest_Date > #{map.startTime}
		  </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and ir.Invest_Date &lt; #{map.endTime}
		  </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(ir.Invest_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(ir.Invest_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(ir.Invest_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(ir.Invest_Date)
		  </if>
		) as investTotalAmountValid,
		
		(select count(mvpr.MV_Pay_ID) from Member_VIP_Pay_Record mvpr 
		 where mvpr.Member_ID = bmi.Member_ID and mvpr.Statu = 1
		 and mfp.Record_Date &lt;mvpr.Record_Date and (mvpr.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		  <if test="map.startTime != null and map.startTime !=''">
		    and mvpr.Record_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and mvpr.Record_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(mvpr.Record_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(mvpr.Record_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(mvpr.Record_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(mvpr.Record_Date)
		  </if>
		 ) as countPayVIP,
		
		(select ifnull(sum(CAST((AES_DECRYPT(UNHEX(Repay_Principal),#{map.skey})) as signed)),0) 
		from Loan_Real_Repay lrr 
		left join Project_App_Record par  on par.Apply_ID = lrr.Apply_ID
		where  par.Member_ID = bmi.Member_ID
		and mfp.Record_Date &lt;lrr.Repay_Time and (lrr.Repay_Time&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		  <if test="map.startTime != null and map.startTime !=''">
		    and lrr.Repay_Time > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and lrr.Repay_Time &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(lrr.Repay_Time) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(lrr.Repay_Time)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(lrr.Repay_Time)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(lrr.Repay_Time)
		  </if>
		) as replayPrincipal,
		
		(select ifnull(sum(iar.Award_Amount),0) from InviteMaster_Award_Record iar
		left join Project_App_Record  par  on par.Apply_ID = iar.Project_Id
		where par.Member_ID =bmi.Member_ID and iar.Award_Type = 0 and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as loanAward,
		
		(select ifnull(sum(iar.Award_Amount),0) from InviteMaster_Award_Record iar
		left join invest_record  ir  on ir.Invest_ID = iar.Project_Id
		where ir.Member_ID =bmi.Member_ID and iar.Award_Type = 1 and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as investAward,
		 
		(select ifnull(sum(iar.Award_Amount),0) from InviteMaster_Award_Record iar
		left join Member_VIP_Pay_Record  vip  on vip.MV_Pay_ID = iar.Project_Id
		where vip.Member_ID =bmi.Member_ID and iar.Award_Type = 3 and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as vipAward,
		
		(select ifnull(sum(iar.Award_Amount),0) from InviteMaster_Award_Record iar 
		 where  iar.Member_ID = bmi.Member_ID and iar.Award_Type = 2 and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		 <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as repayAward,
		
		(select ifnull(sum(iar.Award_Amount),0) from InviteMaster_Award_Record iar  
		where  iar.Member_ID = bmi.Member_ID and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		 <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as awardTotal
		
		from  Invite_Master im 
		join Member_Financial_Planner mfp on im .Im_Apply_ID = mfp.Im_Apply_ID
		left join member_info bmi on bmi.Member_ID = mfp.Member_ID
		left join personal_base_info pbi  	on  bmi.Personal_Id = pbi.Personal_Id
		left join  Company_Info ci 	on bmi.Personal_Id = ci.Company_ID
		where im.Member_ID = #{map.memberID}  
		and mfp.Record_Date &lt;NOW() and ( NOW()&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
    </select>
    
    
   <!--     推荐达人历史返现 -->
    <select id="getInviteMasterHistoryBack" parameterType="product_p2p.kit.pageselect.PageEntity"
   resultType = "cn.invitemastermng.model.AwardPaymentRecordEntity">
    SELECT	  
		  fap.Start_Date    as startDate,
		  fap.End_Date      as endDate,
          fap.Borrow_Amount as borrowAmount,
          fap.Invest_Amount as investAmount,
          fap.Vip_Amount    as vipAmount,
          fap.Repay_Amount  as repayAmount, 
		  fap.Borrow_Award  as borrowAward,
		  fap.Invest_Award  as investAward,
		  fap.Vip_Award     as vipAward,
		  fap.Repay_Award   as repayAward,
		  fap.Real_Amount   as realAmount,
		  fap.Borrow_Award+fap.Invest_Award+fap.Vip_Award+fap.Real_Amount as awardAmount,
		  fap.Pay_Date      as payDate,
          fap.Pay_Statu     as payStatu
		  from InviteMaster_Award_PayRecord  fap
		  left join  Invite_Master fa 	on fa.IM_ID = fap.IM_ID
		  where fa.Member_ID = #{map.memberID}
		  <!-- 		     提奖统计月份 -->
		  <if test="map.month != null and map.month !=''">
		    and  (date_format(fap.Start_Date , '%m' ) = #{map.month}
		         or date_format(fap.End_Date , '%m' ) = #{map.month})
		  </if> 
          <!-- 		     提奖发放时间 -->
		  <if test="map.startTime != null and map.startTime !=''">
		    and fap.Pay_Date > #{map.startTime}
		 </if>
		  <!-- 		     提奖发放时间 -->
		  <if test="map.endTime != null and map.endTime !=''">
		    and fap.Pay_Date &lt; #{map.endTime}
		 </if>
    </select>
    
    
    
    <!--         推荐达人邀请记录 -->
    <select id="getInviteInvitationRecord" parameterType="product_p2p.kit.pageselect.PageEntity"
     resultType = "cn.invitemastermng.model.InvitationRecordEntity">
      select
		bmi.Logname as logname,
		CASE
			WHEN bmi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			WHEN bmi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		END memberName,
        bmi.Reg_Date as regDate,
        case when  mti.ThirdParty_Account is null then 0
             when mti.ThirdParty_Account is not null then 1
        END isopenThird
        from  Invite_Master im 
		join Member_Financial_Planner mfp on im .Im_Apply_ID = mfp.Im_Apply_ID
		join member_info bmi on bmi.Member_ID = mfp.Member_ID
		left join personal_base_info pbi  	on  bmi.Personal_Id = pbi.Personal_Id
		left join Company_Info ci 	on bmi.Personal_Id = ci.Company_ID
		left join  Member_Third_Info  mti on  mti.Member_ID = bmi.Member_ID and  mti.Member_Type = bmi.Member_Type
        where im.Member_ID =  #{map.memberID}
           <!-- 		    开户状态  开户-->
		  <if test="map.isopenThird != null and map.isopenThird == 1">
		    and mti.ThirdParty_Account is not null
		  </if> 
		  <!-- 		    开户状态  未开户-->
		  <if test="map.isopenThird != null and map.isopenThird == 2">
		    and mti.ThirdParty_Account is  null
		  </if> 
		  <!-- 		     注册时间 -->
		  <if test="map.startTime != null and map.startTime !=''">
		    and bmi.Reg_Date > #{map.startTime}
		 </if>
		  <!-- 		     注册时间 -->
		  <if test="map.endTime != null and map.endTime !=''">
		    and bmi.Reg_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name !=''">
		    and (bmi.Logname like '%${map.name}%' or 
		        CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)  like '%${map.name}%' or
		        CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)  like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     根据注册时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   bmi.Reg_Date desc
		 </if>
		  <!-- 		     根据注册时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   bmi.Reg_Date asc
		 </if>
    </select>
    
    
    
    <!--  推荐达人推荐借款明细 -->
    <select id="selectInviteBorrowing" parameterType="product_p2p.kit.pageselect.PageEntity"
    resultMap="CommissionIssuedMap.Borrowing">
          SELECT
		  pa.Apply_Id,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		  END Personal_Name,	
		  prbi.Deadline,
		  prbi.Deadline_Type,
		  (select d.name1 from dict d where d.code1 = prbi.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  ifnull(prbi.Amount,0) Amount,
		  prbi.Year_Rate,
		  pap.Hold_Date
		  from project_app_record pa 
		  join project_base_info prbi 	ON pa.Project_Base_ID = prbi.Project_Base_ID 
		  join member_info mi 	ON pa.Member_ID = mi.Member_ID
		  left join Project_App_Process pap   ON pa.Apply_Id = pap.Apply_Id
		  LEFT join personal_base_info pbi	  ON mi.Personal_Id = pbi.Personal_Id
		  LEFT join Company_Info ci ON mi.Personal_Id = ci.Company_ID
	      join Member_Financial_Planner 	 mfp on  mfp.Member_ID = mi.Member_ID
	      join Invite_Master im on im .Im_Apply_ID = mfp.Im_Apply_ID
	      where im.Member_ID =  #{map.memberID} and pa.Invest_Statu >=3
	      and mfp.Record_Date &lt;pap.Record_Date and (pap.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    
	      <!-- 		  借款名称 -->
		  <if test="map.projectTitle != null and map.projectTitle != ''">
		    and    prbi.Project_Title like '%${map.projectTitle}%'  
		 </if>
	       <!-- 	放款时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  pap.Hold_Date > #{map.startTime}
		 </if>
		  <!-- 		     放款时间时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  pap.Hold_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		        CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)  like '%${map.name}%' or
		        CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)  like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     根据放款时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   pap.Hold_Date desc
		 </if>
		  <!-- 		     根据放款时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   pap.Hold_Date asc
		 </if>
    </select>
      <!-- 推荐达人投资明细 -->
    <select id="getInviteInvest" parameterType="product_p2p.kit.pageselect.PageEntity"
    resultMap="CommissionIssuedMap.Invest">
       select * from ( 
       SELECT 
		  prbi.Project_Title,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{map.skey})) AS SIGNED) Invest_Amount_Valid,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		  END Personal_Name,	
		  ifnull((SELECT SUM(CAST((AES_DECRYPT(UNHEX(ii.SDRecv_Principal),#{map.skey})) AS SIGNED)) FROM Invest_Income ii WHERE ii.Invest_Id = ir.Invest_Id),0) SDRecv_Principal,
		  ifnull( (SELECT SUM(CAST((AES_DECRYPT(UNHEX(ii.SDRecv_Interest),#{map.skey})) AS SIGNED)) FROM Invest_Income ii WHERE ii.Invest_Id = ir.Invest_Id),0) SDRecv_Interest,
		  
		  (select iic.SDRecv_MaxTime  from  invest_income iic
		  where   ir.Invest_Id = iic.Invest_Id   and iic.Statu =0 and iic.IsValid = 0 order by iic.SDRecv_MaxTime asc limit 1) as nextReplayDay,
	      ir.Hold_Date
		FROM Invest_Record ir  
	    join project_app_record Pa 	ON ir.Apply_Id = pa.Apply_Id
		join project_base_info prbi ON pa.Project_Base_ID = prbi.Project_Base_ID
		join member_info mi ON ir.Member_ID = mi.Member_ID
		join Project_App_Process pap ON pa.Apply_Id = pap.Apply_Id
		left join personal_base_info pbi ON mi.Personal_Id = pbi.Personal_Id
		left join Company_Info ci ON mi.Personal_Id = ci.Company_ID
        join Member_Financial_Planner 	 mfp on  mfp.Member_ID = mi.Member_ID
	    join Invite_Master im on im .Im_Apply_ID = mfp.Im_Apply_ID
	    where im.Member_ID =  #{map.memberID} and ir.IsValid = 0
	    and mfp.Record_Date &lt;ir.Invest_Date and (ir.Invest_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    ) as pp
	    <where>
	       <!-- 		  借款名称 -->
		  <if test="map.projectTitle != null and map.projectTitle != ''">
		    and    Project_Title like '%${map.projectTitle}%'  
		  </if>
	       <!-- 	预期收益时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and    nextReplayDay > #{map.startTime}
		 </if>
		  <!-- 		     预期收益时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  nextReplayDay &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (    
		           Logname like '%${map.name}%' or 
		           Personal_Name like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     预期收益时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   nextReplayDay desc
		 </if>
		  <!-- 		     预期收益时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   nextReplayDay asc
		 </if>
		 </where>
    </select>
    
    <!--           推荐达人VIP购买明细 -->
    <select id="getInviteVipPay"  parameterType="product_p2p.kit.pageselect.PageEntity"
    resultMap="CommissionIssuedMap.BayVIP">
       SELECT
		  mvp.MV_Pay_ID,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		  END Personal_Name,	
		  mvr.Certify_SDate,
		  mvr.Certify_EDate, 
		  ifnull(sum(CAST((AES_DECRYPT(UNHEX(mvp.Amount),#{map.skey})) as signed)),0) as Amount,
		  mvp.Record_Date
		  FROM Member_VIP_Pay_Record mvp 
		  join Member_VIP_Record mvr ON mvp.MV_Pay_ID = mvr.MV_Pay_ID
		  join member_info mi ON mvp.Member_ID = mi.Member_ID
		  left join personal_base_info pbi	 	ON mi.Personal_Id = pbi.Personal_Id
		  left join Company_Info ci ON mi.Personal_Id = ci.Company_ID 
          join Member_Financial_Planner 	 mfp on  mfp.Member_ID = mi.Member_ID
	      join Invite_Master im on im .Im_Apply_ID = mfp.Im_Apply_ID
	      where im.Member_ID =  #{map.memberID}  and  mvp.Statu =1
	      and mfp.Record_Date &lt;mvp.Record_Date and (mvp.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	
	       <!-- 	支付时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  mvp.Record_Date > #{map.startTime}
		 </if>
		  <!-- 		    支付时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  mvp.Record_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		       CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)  like '%${map.name}%' or
		        CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)  like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     支付时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   mvp.Record_Date desc
		 </if>
		  <!-- 		    支付时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by  mvp.Record_Date asc
		 </if>
    </select>
    
    <!-- 查询推荐达人推荐还本明细
		Apply_Id,项目申请记录ID
		Project_Title,借款名称
		Amount,借款金额
		Logname,借款人用户名
		Personal_Name,会员名称
		Repay_Principal,本次还款本金
		Repay_Interest,本次还款利息
		Repay_Time,还款时间
		Repay_MaxTime,预期还款时间
		is_overque,是否逾期1是0否
	--> 
    <select id="getRepaymentInvite" parameterType="product_p2p.kit.pageselect.PageEntity" resultMap="CommissionIssuedMap.InvestRepayment">
    SELECT
	  pa.Apply_Id,
	  prbi.Project_Title,
	  mi.Logname,
	  CASE
		  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
		  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
	  END Personal_Name,	
	  ifnull(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Principal),#{map.skey})) AS SIGNED),0) Repay_Principal,
	  ifnull(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Interest),#{map.skey})) AS SIGNED),0) Repay_Interest,
	  lrr.Repay_Time,lr.Repay_MaxTime,
	  (CASE when lr.Repay_MaxTime >= lrr.Repay_Time then 0 
			else 1
		end) is_overque
	FROM Loan_Real_Repay lrr 
    join Loan_Repay lr    ON lrr.Repay_ID = lr.Repay_ID
    join project_app_record pa  ON lr.Apply_Id = pa.Apply_Id
	join project_base_info prbi 	ON pa.Project_Base_ID = prbi.Project_Base_ID
	join member_info mi ON pa.Member_ID = mi.Member_ID
	left join personal_base_info pbi	 ON mi.Personal_Id = pbi.Personal_Id
	left join Company_Info ci ON mi.Personal_Id = ci.Company_ID 
    join Member_Financial_Planner 	 mfp on  mfp.Member_ID = mi.Member_ID
	join Invite_Master im on im .Im_Apply_ID = mfp.Im_Apply_ID
	where im.Member_ID =  #{map.memberID} 
	and mfp.Record_Date &lt;lrr.Repay_Time and (lrr.Repay_Time&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    <!-- 		  借款名称 -->
		  <if test="map.projectTitle != null and map.projectTitle != ''">
		    and    prbi.Project_Title like '%${map.projectTitle}%'  
		  </if>
	      <!-- 	还款时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  lrr.Repay_Time > #{map.startTime}
		  </if>
		  <!-- 		    还款时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  lrr.Repay_Time &lt; #{map.endTime}
		  </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		      CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)  like '%${map.name}%' or
		      CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)  like '%${map.name}%'
		    )
		  </if>
		   <!-- 	逾期 -->
		  <if test="map.over != null and map.over == 1">
		    and  lr.Repay_MaxTime &lt; lrr.Repay_Time
		  </if>
		  <!-- 		   未逾期-->
		  <if test="map.over != null and map.over == 2">
		    and  lr.Repay_MaxTime >= lrr.Repay_Time
		  </if>
		  <!-- 		     还款时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   lrr.Repay_Time desc
		 </if>
		  <!-- 		     还款时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   lrr.Repay_Time asc
		 </if>
    </select>
    <!--            推荐达人顶部统计 -->
    <select id="selectInviteMasterStatistic" parameterType="map"
     resultType = "cn.invitemastermng.model.InviteMasterAwardRecordEntity">
       select 
		(select ifnull(sum(pbi.Real_amount),0) from  Project_App_Record par 
		 left join Project_Base_Info pbi on par.Project_Base_ID = pbi.Project_Base_ID
		 left join Project_App_Process pap on pap.Apply_ID = par.Apply_ID 
		 join Member_Financial_Planner mfp  on par.member_ID = mfp.Member_ID 
	 	 where mfp.Im_Apply_ID = im.Im_Apply_ID and par.Invest_Statu >= 3 
	 	 and mfp.Record_Date &lt;pap.Record_Date and (pap.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    ) as loanTotalAmount,
		
		(select ifnull(sum(CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{skey})) as signed)),0)  
		 from invest_record ir  
		 join Member_Financial_Planner mfp on ir.Member_ID = mfp.Member_ID 
	 	 where mfp.Im_Apply_ID = im.Im_Apply_ID and ir.IsValid = 0
		 and mfp.Record_Date &lt;ir.Invest_Date and (ir.Invest_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    ) as investTotalAmountValid,
		
		(select  ifnull(sum(CAST((AES_DECRYPT(UNHEX(mvpr.Amount),#{skey})) as signed)),0)
		 from Member_VIP_Pay_Record mvpr 
		 join Member_Financial_Planner mfp on  mvpr.Member_ID = mfp.Member_ID 
	 	 where mfp.Im_Apply_ID = im.Im_Apply_ID  and mvpr.Statu = 1
		 and mfp.Record_Date &lt;mvpr.Record_Date and (mvpr.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	  	 ) as totalPayVIP,
		
		(select ifnull(sum(CAST((AES_DECRYPT(UNHEX(Repay_Principal),#{skey})) as signed)),0) 
		from Loan_Real_Repay lrr 
		left join Project_App_Record par  on par.Apply_ID = lrr.Apply_ID
		join Member_Financial_Planner mfp  on par.Member_ID = mfp.Member_ID 
	 	where mfp.Im_Apply_ID = im.Im_Apply_ID 
		and mfp.Record_Date &lt;lrr.Repay_Time and (lrr.Repay_Time&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		) as replayPrincipal,
		
		(select ifnull(sum(iar.Award_Amount),0) from InviteMaster_Award_Record iar 
		join Member_Financial_Planner mfp on iar.Member_ID = mfp.Member_ID 
	 	where mfp.Im_Apply_ID = im.Im_Apply_ID  and iar.Pay_Statu =2) as awardTotal 
        from  Invite_Master im  
		where im.Member_ID = #{memberID}  
    </select> 
</mapper>