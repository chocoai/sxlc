<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">     
<mapper namespace="FinancialAdvisor"> 
     <!--           理财顾问提奖记录 -->
    <select id="getFinancialAdvisorAward">
      select
		bmi.Logname as logname,
		CASE
			WHEN bmi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			WHEN bmi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		END memberName	 ,
		(select sum(pbi.Real_amount) from  Project_App_Record par 
		left join Project_Base_Info pbi on par.Project_Base_ID = pbi.Project_Base_ID
		left join Project_App_Process pap on pap.Apply_ID = par.Apply_ID
		where par.member_ID = bmi.Member_ID and par.Invest_Statu >= 3
		and mfp.Record_Date &lt;pap.Record_Date and ( pap.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		<if test="map.startTime != null and map.startTime !=''">
		    and pap.Hold_Date > #{map.startTime}
		  </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and pap.Hold_Date &lt; #{map.endTime}
		  </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(pap.Hold_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(pap.Hold_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(pap.Hold_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(pap.Hold_Date)
		  </if>
		) as loanTotalAmount,
		
		(select sum(ir.Invest_Amount_Valid) from invest_record ir 
		where ir.Member_ID= bmi.Member_ID and ir.IsValid = 0
		and mfp.Record_Date &lt;ir.Invest_Date and (ir.Invest_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    <if test="map.startTime != null and map.startTime !=''">
		    and ir.Invest_Date > #{map.startTime}
		  </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and ir.Invest_Date &lt; #{map.endTime}
		  </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(ir.Invest_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(ir.Invest_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(ir.Invest_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(ir.Invest_Date)
		  </if>
		) as investTotalAmountValid,
		
		(select count(mvpr.MV_Pay_ID) from Member_VIP_Pay_Record mvpr 
		where mvpr.Member_ID = bmi.Member_ID and mvpr.Statu = 1
		and mfp.Record_Date &lt;mvpr.Record_Date and (mvpr.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		
		  <if test="map.startTime != null and map.startTime !=''">
		    and mvpr.Record_Date > #{map.startTime}
		  </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and mvpr.Record_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(mvpr.Record_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(mvpr.Record_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(mvpr.Record_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(mvpr.Record_Date)
		  </if>
		) as countPayVIP,
		
		(select ifnull(sum(CAST((AES_DECRYPT(UNHEX(Repay_Principal),#{map.skey})) as signed)),0) 
		from Loan_Real_Repay lrr 
		left join Project_App_Record par  on par.Apply_ID = lrr.Apply_ID
		where  par.Member_ID = bmi.Member_ID
		and mfp.Record_Date &lt;lrr.Repay_Time and (lrr.Repay_Time&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		
		<if test="map.startTime != null and map.startTime !=''">
		    and lrr.Repay_Time > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and lrr.Repay_Time &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(lrr.Repay_Time) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(lrr.Repay_Time)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(lrr.Repay_Time)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(lrr.Repay_Time)
		  </if>
		) as replayPrincipal,
		
		(select sum(iar.Award_Amount) from FinancialAdvisor_Award_Record iar
		left join Project_App_Record  par  on par.Apply_ID = iar.Project_Id
		where par.Member_ID =bmi.Member_ID and iar.Award_Type = 0 and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as loanAward,
		
		(select sum(iar.Award_Amount) from FinancialAdvisor_Award_Record iar
		left join invest_record  ir  on ir.Invest_ID = iar.Project_Id
		where ir.Member_ID =bmi.Member_ID and iar.Award_Type = 1 and iar.Pay_Statu =2
		<if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as investAward,
		 
		(select sum(iar.Award_Amount) from FinancialAdvisor_Award_Record iar
		left join Member_VIP_Pay_Record  vip  on vip.MV_Pay_ID = iar.Project_Id
		where vip.Member_ID =bmi.Member_ID and iar.Award_Type = 3 and iar.Pay_Statu =2
		<if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		  <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as vipAward,
		
		(select sum(iar.Award_Amount) from FinancialAdvisor_Award_Record iar
		left join Loan_Real_Repay  lrr  on lrr.Real_Repay_ID = iar.Project_Id
		left join Project_App_Record par  on par.Apply_ID = lrr.Apply_ID
		where  par.Member_ID = bmi.Member_ID and iar.Award_Type = 2 and iar.Pay_Statu =2
		 <if test="map.startTime != null and map.startTime !=''">
		    and iar.Award_Date > #{map.startTime}
		 </if>
		 <if test="map.endTime != null and map.endTime !=''">
		    and iar.Award_Date &lt; #{map.endTime}
		 </if>
          <!-- 		    今天 -->
		  <if test="map.dateStart != null and  map.dateStart ==1">
		    and  to_days(iar.Award_Date) = to_days(now())
		  </if>
		  <!-- 	近一周 -->
		  <if test="map.dateStart != null and map.dateStart ==2">
		    and  DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近一月 -->
		  <if test="map.dateStart != null and map.dateStart ==3">
		    and  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt; date(iar.Award_Date)
		  </if>
		  <!-- 	近六月 -->
		  <if test="map.dateStart != null and map.dateStart ==4">
		    and  DATE_SUB(CURDATE(), INTERVAL 180 DAY) &lt; date(iar.Award_Date)
		  </if>
		) as repayAward
		
		from  Financial_Advisor im 
		join Member_Financial_Advisor mfp on im.FA_ID = mfp.FA_ID
	    join member_info bmi on bmi.Member_ID = mfp.Member_ID
		left join personal_base_info pbi  	on  bmi.Personal_Id = pbi.Personal_Id
		left join  Company_Info ci 	on bmi.Personal_Id = ci.Company_ID
		where im.Member_ID =  #{map.memberID}  
    </select>
    
   <!--  理财顾问历史返现记录 -->
    <select id="getFinancialMasterHistoryBack">
       SELECT	  
		  fap.Start_Date    as startDate,
		  fap.End_Date      as endDate,
          fap.Borrow_Amount as borrowAmount,
          fap.Invest_Amount as investAmount,
          fap.Vip_Amount    as vipAmount,
          fap.Repay_Amount  as repayAmount, 
		  fap.Borrow_Award  as borrowAward,
		  fap.Invest_Award  as investAward,
		  fap.Vip_Award     as vipAward,
		  fap.Repay_Award   as repayAward,
		  fap.Real_Amount   as realAmount,
		  fap.Borrow_Award+fap.Invest_Award+fap.Vip_Award+fap.Real_Amount as awardAmount,
		  fap.Pay_Date      as payDate,
          fap.Pay_Statu     as payStatu
		  from FinancialAdvisor_Award_PayRecord fap
		  left join  Financial_Advisor fa 	on fa.FA_ID = fap.FA_ID
		  where fa.Member_ID =  #{map.memberID}  
		  <!-- 		     提奖统计月份 -->
		  <if test="map.month != null and map.month !=''">
		    and  (date_format(fap.Start_Date , '%m' ) = #{map.month}
		         or date_format(fap.End_Date , '%m' ) = #{map.month})
		  </if> 
          <!-- 		     提奖发放时间 -->
		  <if test="map.startTime != null and map.startTime !=''">
		    and fap.Pay_Date > #{map.startTime}
		 </if>
		  <!-- 		     提奖发放时间 -->
		  <if test="map.endTime != null and map.endTime !=''">
		    and fap.Pay_Date &lt; #{map.endTime}
		 </if>
    </select>
    <!--         理财顾问邀请记录 -->
    <select id="getFinancialInvitationRecord" parameterType="product_p2p.kit.pageselect.PageEntity"
     resultType = "cn.invitemastermng.model.InvitationRecordEntity">
      select
		bmi.Logname as logname,
		CASE
			WHEN bmi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			WHEN bmi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		END memberName,
        bmi.Reg_Date,
        case when  mti.ThirdParty_Account is null then 0
             when mti.ThirdParty_Account is not null then 1
        END isopenThird
        from  Financial_Advisor im 
		join Member_Financial_Advisor mfp on im .FA_ID = mfp.FA_ID
		left join member_info bmi on bmi.Member_ID = mfp.Member_ID
		left join personal_base_info pbi  	on  bmi.Personal_Id = pbi.Personal_Id
		left join Company_Info ci 	on bmi.Personal_Id = ci.Company_ID
		left join  Member_Third_Info  mti on  mti.Member_ID = bmi.Member_ID and  mti.Member_Type = bmi.Member_Type
        where im.Member_ID =  #{map.memberID}
          <!-- 		    开户状态  开户-->
		  <if test="map.isopenThird != null and map.isopenThird == 1">
		    and mti.ThirdParty_Account is null
		  </if> 
		  <!-- 		    开户状态  未开户-->
		  <if test="map.isopenThird != null and map.isopenThird == 2">
		    and mti.ThirdParty_Account is null
		  </if> 
		  <!-- 		     注册时间 -->
		  <if test="map.startTime != null and map.startTime !=''">
		    and bmi.Reg_Date > #{map.startTime}
		 </if>
		  <!-- 		     注册时间 -->
		  <if test="map.endTime != null and map.endTime !=''">
		    and bmi.Reg_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name !=''">
		    and (bmi.Logname like '%${map.name}%' or 
		        ci.Compang_Name like '%${map.name}%' or
		        pbi.Personal_Name like '%${map.name}%'
		    )
		 </if>
    </select>
    
    <!--  理财顾问推荐借款明细 -->
    <select id="selectFinancialBorrowing" parameterType="product_p2p.kit.pageselect.PageEntity"
    resultMap="CommissionIssuedMap.Borrowing">
          SELECT
		  pa.Apply_Id,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		  END Personal_Name,	
		  pp.Deadline,
		  pp.Deadline_Type,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pap.Hold_Date
		  from project_app_record pa 
		  join project_base_info prbi 	ON pa.Project_Base_ID = prbi.Project_Base_ID
		  join project_purpose pp 	ON pp.Purpose_ID = pa.Purpose_ID
		  join member_info mi 	ON pp.Member_ID = mi.Member_ID
		  join Project_App_Process pap   ON pa.Apply_Id = pap.Apply_Id
		  LEFT join personal_base_info pbi	  ON mi.Personal_Id = pbi.Personal_Id
		  LEFT join Company_Info ci ON mi.Personal_Id = ci.Company_ID
	      join Member_Financial_Advisor 	 mfp on  mfp.Member_ID = mi.Member_ID
	      join Financial_Advisor im on im .FA_ID = mfp.FA_ID
	      where im.Member_ID =  #{map.memberID} and pa.Invest_Statu >=3
	      and mfp.Record_Date &lt;pap.Record_Date and (pap.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	      <!-- 		  借款名称 -->
		  <if test="map.projectTitle != null and map.projectTitle != ''">
		    and    prbi.Project_Title like '%${map.projectTitle}%'  
		 </if>
	       <!-- 	放款时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  pap.Hold_Date > #{map.startTime}
		 </if>
		  <!-- 		     放款时间时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  pap.Hold_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		        ci.Compang_Name like '%${map.name}%' or
		        pbi.Personal_Name like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     根据放款时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   pap.Hold_Date desc
		 </if>
		  <!-- 		     根据放款时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   pap.Hold_Date asc
		 </if>
    </select>
      <!-- 理财顾问投资明细 -->
    <select id="getFinancialInvest" parameterType="product_p2p.kit.pageselect.PageEntity"
    resultMap="CommissionIssuedMap.Invest">
      SELECT 
		  prbi.Project_Title,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{map.skey})) AS SIGNED) Invest_Amount_Valid,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		  END Personal_Name,	
		  (SELECT SUM(CAST((AES_DECRYPT(UNHEX(ii.SDRecv_Principal),#{map.skey})) AS SIGNED)) FROM Invest_Income ii WHERE ii.Invest_Id = ir.Invest_Id) SDRecv_Principal,
		  (SELECT SUM(CAST((AES_DECRYPT(UNHEX(ii.SDRecv_Interest),#{map.skey})) AS SIGNED)) FROM Invest_Income ii WHERE ii.Invest_Id = ir.Invest_Id) SDRecv_Interest,
		  ir.Hold_Date
		FROM Invest_Record ir 
        join FinancialAdvisor_Award_Record far   ON ir.Invest_Id = far.Project_Id AND far.Award_Type = 1
	    join project_app_record Pa 	ON ir.Apply_Id = pa.Apply_Id
		join project_base_info prbi ON pa.Project_Base_ID = prbi.Project_Base_ID
		join member_info mi ON ir.Member_ID = mi.Member_ID
		join Project_App_Process pap ON pa.Apply_Id = pap.Apply_Id
		left join personal_base_info pbi ON mi.Personal_Id = pbi.Personal_Id
		left join Company_Info ci ON mi.Personal_Id = ci.Company_ID
        join Member_Financial_Advisor 	 mfp on  mfp.Member_ID = mi.Member_ID
	    join Financial_Advisor im on im .FA_ID = mfp.FA_ID
	    where im.Member_ID =  #{map.memberID} and ir.IsValid = 0
	    and mfp.Record_Date &lt;ir.Invest_Date and (ir.Invest_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	
	     <!-- 		  借款名称 -->
		  <if test="map.projectTitle != null and map.projectTitle != ''">
		    and    prbi.Project_Title like '%${map.projectTitle}%'  
		  </if>
	       <!-- 	预期收益时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  ir.Invest_Date > #{map.startTime}
		 </if>
		  <!-- 		     预期收益时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  ir.Invest_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		        ci.Compang_Name like '%${map.name}%' or
		        pbi.Personal_Name like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     预期收益时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   ir.Invest_Date desc
		 </if>
		  <!-- 		     预期收益时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   ir.Invest_Date asc
		 </if> 
    </select>
    
    <!--           理财顾问VIP购买明细 -->
    <select id="getFinancialVipPay"  parameterType="product_p2p.kit.pageselect.PageEntity"
    resultMap="CommissionIssuedMap.BayVIP">
       SELECT
		  mvp.MV_Pay_ID,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
		  END Personal_Name,	
		  mvr.Certify_SDate,
		  mvr.Certify_EDate,
		  mvp.Amount,
		  mvp.Record_Date
		  FROM Member_VIP_Pay_Record mvp
		  join FinancialAdvisor_Award_Record far ON mvp.MV_Pay_ID = far.Project_Id AND far.Award_Type = 3
		  join Member_VIP_Record mvr ON mvp.MV_Pay_ID = mvr.MV_Pay_ID
		  join member_info mi ON mvp.Member_ID = mi.Member_ID
		  left join personal_base_info pbi	 	ON mi.Personal_Id = pbi.Personal_Id
		  left join Company_Info ci ON mi.Personal_Id = ci.Company_ID 
          join Member_Financial_Advisor 	 mfp on  mfp.Member_ID = mi.Member_ID
	      join Financial_Advisor im on im .FA_ID = mfp.FA_ID
	      where im.Member_ID =  #{map.memberID} and  mvp.Statu =1
	      and mfp.Record_Date &lt;mvp.Record_Date and (mvp.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	      <!-- 	支付时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  mvp.Record_Date > #{map.startTime}
		 </if>
		  <!-- 		    支付时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  mvp.Record_Date &lt; #{map.endTime}
		 </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		        ci.Compang_Name like '%${map.name}%' or
		        pbi.Personal_Name like '%${map.name}%'
		    )
		 </if>
		  <!-- 		     支付时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   mvp.Record_Date desc
		 </if>
		  <!-- 		    支付时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by  mvp.Record_Date asc
		 </if>
    </select>
    <!-- 查询理财顾问推荐还本明细
		Apply_Id,项目申请记录ID
		Project_Title,借款名称
		Amount,借款金额
		Logname,借款人用户名
		Personal_Name,会员名称
		Repay_Principal,本次还款本金
		Repay_Interest,本次还款利息
		Repay_Time,还款时间
		Repay_MaxTime,预期还款时间
		is_overque,是否逾期1是0否
	--> 
    <select id="getRepaymentAdvisor" parameterType="product_p2p.kit.pageselect.PageEntity" resultMap="CommissionIssuedMap.InvestRepayment">
    SELECT
	  pa.Apply_Id,
	  prbi.Project_Title,
	  mi.Logname,
	  CASE
		  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{map.skey})) using utf8)
		  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.skey})) using utf8)
	  END Personal_Name,	
	  CAST((AES_DECRYPT(UNHEX(lrr.Repay_Principal),#{map.skey})) AS SIGNED) Repay_Principal,
	  CAST((AES_DECRYPT(UNHEX(lrr.Repay_Interest),#{map.skey})) AS SIGNED) Repay_Interest,
	  lrr.Repay_Time,lr.Repay_MaxTime,
	  (CASE when lr.Repay_MaxTime >= lrr.Repay_Time then 0 
			else 1
		end) is_overque
	FROM Loan_Real_Repay lrr 
    join Loan_Repay lr    ON lrr.Repay_ID = lr.Repay_ID
    join project_app_record pa  ON lr.Apply_Id = pa.Apply_Id
	join project_base_info prbi 	ON pa.Project_Base_ID = prbi.Project_Base_ID
	join member_info mi ON pa.Member_ID = mi.Member_ID
	left join personal_base_info pbi	 ON mi.Personal_Id = pbi.Personal_Id
	left join Company_Info ci ON mi.Personal_Id = ci.Company_ID 
    join Member_Financial_Advisor 	 mfp on  mfp.Member_ID = mi.Member_ID
	join Financial_Advisor im on im .FA_ID = mfp.FA_ID
	where im.Member_ID =  #{map.memberID} 
	and mfp.Record_Date &lt;lrr.Repay_Time and (lrr.Repay_Time&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	   
	  <!-- 		  借款名称 -->
		  <if test="map.projectTitle != null and map.projectTitle != ''">
		    and    prbi.Project_Title like '%${map.projectTitle}%'  
		  </if>
	      <!-- 	还款时间 -->
		  <if test="map.startTime != null and map.startTime != ''">
		    and  lrr.Repay_Time > #{map.startTime}
		  </if>
		  <!-- 		    还款时间 -->
		  <if test="map.endTime != null and map.endTime != ''">
		    and  lrr.Repay_Time &lt; #{map.endTime}
		  </if>
		  <!-- 		     会员/用户名 -->
		  <if test="map.name != null and map.name != ''">
		    and (mi.Logname like '%${map.name}%' or 
		        ci.Compang_Name like '%${map.name}%' or
		        pbi.Personal_Name like '%${map.name}%'
		    )
		  </if>
		   <!-- 	逾期 -->
		  <if test="map.over != null and map.over == 1">
		    and  lr.Repay_MaxTime &lt; lrr.Repay_Time
		  </if>
		  <!-- 		   未逾期-->
		  <if test="map.over != null and map.over == 2">
		    and  lr.Repay_MaxTime >= lrr.Repay_Time
		  </if>
		  <!-- 		     还款时间降序 -->
		  <if test="map.order != null and map.order == 1">
		    order by   lrr.Repay_Time desc
		 </if>
		  <!-- 		     还款时间升序 -->
		  <if test="map.order != null and map.order == 2">
		    order by   lrr.Repay_Time asc
		 </if>
    </select>  
    
     <!--            理财顾问顶部统计 -->
    <select id="selectFinancialMasterStatistic" parameterType="map"
     resultType = "cn.invitemastermng.model.InviteMasterAwardRecordEntity">
        select 
		(select ifnull(sum(pbi.Real_amount),0) from  Project_App_Record par 
		 left join Project_Base_Info pbi on par.Project_Base_ID = pbi.Project_Base_ID
		 left join Project_App_Process pap on pap.Apply_ID = par.Apply_ID
	 	 where par.member_ID = bmi.Member_ID and par.Invest_Statu >= 3 
	 	 and mfp.Record_Date &lt;pap.Record_Date and (pap.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    ) as loanTotalAmount,
		
		(select ifnull(sum(ir.Invest_Amount_Valid),0) from invest_record ir 
		 where ir.Member_ID= bmi.Member_ID and ir.IsValid = 0
		 and mfp.Record_Date &lt;ir.Invest_Date and (ir.Invest_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	    ) as investTotalAmountValid,
		
		(select sum(mvpr.Amount) from Member_VIP_Pay_Record mvpr 
		 where mvpr.Member_ID = bmi.Member_ID  and mvpr.Statu = 1
		 and mfp.Record_Date &lt;mvpr.Record_Date and (mvpr.Record_Date&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
	  	 ) as totalPayVIP,
		
		(select ifnull(sum(CAST((AES_DECRYPT(UNHEX(Repay_Principal),#{skey})) as signed)),0) 
		from Loan_Real_Repay lrr 
		left join Project_App_Record par  on par.Apply_ID = lrr.Apply_ID
		where  par.Member_ID = bmi.Member_ID 
		and mfp.Record_Date &lt;lrr.Repay_Time and (lrr.Repay_Time&lt;mfp.Remove_Date  or  mfp.Remove_Date is null)
		) as replayPrincipal,
		
		(select sum(iar.Award_Amount) from InviteMaster_Award_Record iar
		left join Project_App_Record  par  on par.Apply_ID = iar.Project_Id
		where par.Member_ID =bmi.Member_ID  and iar.Pay_Statu =2) as totalAward
        from  Financial_Advisor im 
		join Member_Financial_Advisor mfp on im .FA_ID = mfp.FA_ID
		left join member_info bmi on bmi.Member_ID = mfp.Member_ID 
		where im.Member_ID = #{memberID}  
    </select> 
</mapper>