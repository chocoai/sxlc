<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">     
<mapper namespace="replay">
   <resultMap type = "cn.springmvc.model.LoanRealRepayEntity" id = "resultListRealRepaly">
        <id property = "id"				            column = "Real_Repay_ID" />
		<result property = "thirdTradeId"       	column = "Third_Trade_Id" />
		<result property = "merbillNo"    	        column = "Merbill_No" />
		<result property = "rrojectId"              column = "Project_Id" />
		<result property = "repayId" 	            column = "Repay_Id" />
		<result property = "repayPrincipal"         column = "Repay_Principal" />
		<result property = "repayInterest" 		    column = "Repay_Interest" />
		<result property = "repayOverdueInterest" 	column = "Repay_Overdue_Interest" />
		<result property = "repayOverdue" 	        column = "Repay_Overdue" />
		<result property = "repayPenalty" 	        column = "Repay_Penalty" />  
		<result property = "repayTime" 	            column = "Repay_Time" />  
		<result property = "isAuto" 	            column = "IsAuto" /> 
		<association property="loanRepayEntity" 	resultMap="resultListRepaly"/> 
    </resultMap> 
     <resultMap type = "cn.springmvc.model.LoanRepayEntity" id = "resultListRepaly">
        <id property = "repayID"				column = "Repay_ID" />
		<result property = "projectId"       	column = "Project_Id" />
		<result property = "indexs"    	        column = "Indexs" />
		<result property = "sDRepayPrincipal"   column = "SDRepay_Principal" />
		<result property = "sDRepayInterest" 	column = "SDRepay_Interest" />
		<result property = "repayMaxTime"       column = "Repay_MaxTime" />
		<result property = "statu" 		        column = "Statu" />
		<result property = "isCompensatory" 	column = "IsCompensatory" />
		<result property = "compensatoryTime" 	column = "Compensatory_Time" />
		<result property = "isValid" 	        column = "IsValid" />  
		<result property = "replayTotal" 	    column = "replayTotal" />  
		<result property = "totalSDRepay" 	    column = "totalSDRepay" /> 
		<result property = "loanStatu" 	        column = "loanStatu" /> 
		<result property = "sdPrincipalInterest" column = "SDPrincipalInterest" /> 
    </resultMap>  
    <!-- 查询项目还款计划-->  
	<select id="selectReplayByProjectID" parameterType="map"  resultMap="resultListRepaly">
	    select lr.Repay_MaxTime,loanStatu.name1 as loanStatu,
	    CAST((AES_DECRYPT(UNHEX(lr.SDRepay_Principal),#{sKey})) as signed) SDRepay_Principal,
	    CAST((AES_DECRYPT(UNHEX(lr.SDRepay_Interest),#{sKey})) as signed) SDRepay_Interest,
	    
	    (ifnull(CAST((AES_DECRYPT(UNHEX(lr.SDRepay_Principal),#{sKey})) as signed),0) +
	    ifnull(CAST((AES_DECRYPT(UNHEX(lr.SDRepay_Interest),#{sKey})) as signed),0) ) as SDPrincipalInterest,
	    
	    (select  ifnull(sum(CAST((AES_DECRYPT(UNHEX(SDRepay_Principal),#{sKey})) as signed)),0)+
        ifnull(sum(CAST((AES_DECRYPT(UNHEX(SDRepay_Interest),#{sKey})) as signed)),0) 
        from Loan_Repay lr  where lr.Apply_Id=#{projectID} and lr.IsValid=0 ) as totalSDRepay,
        
        case when now() > lr.Repay_MaxTime  and lr.Statu  !=3 then  4 else lr.Statu end  as Statu
        
	    from Loan_Repay lr 
	    
	    left join DICT loanStatu on   loanStatu.code1= lr.Statu  and loanStatu.tcode = 'DICT_HKJD' 
	    where lr.Apply_Id=#{projectID}  
	    and ( ((select count(Repay_ID) from  Loan_Repay  where IsValid = 1 and  Apply_Id=#{projectID} )=0 and lr.IsValid=0)  
	    or ((select count(Repay_ID) from  Loan_Repay  where IsValid = 1 and  Apply_Id=#{projectID} )>0 and lr.IsValid=1))
    </select>   
      <!--  根据项目申请ID查询已还款-->  
	<select id="selectLoanRealReplay"  parameterType="map" resultMap="resultListRealRepaly" >
	   select lr.Indexs, 
	   CAST((AES_DECRYPT(UNHEX(lrr.Repay_Principal),#{sKey})) as signed) SDRepay_Principal,
	   CAST((AES_DECRYPT(UNHEX(lrr.Repay_Interest),#{sKey})) as signed) SDRepay_Principal,
	   CAST((AES_DECRYPT(UNHEX(lrr.Repay_Overdue_Interest),#{sKey})) as signed) Repay_Overdue_Interest,
	   CAST((AES_DECRYPT(UNHEX(lrr.Repay_Overdue),#{sKey})) as signed) Repay_Overdue,
	   CAST((AES_DECRYPT(UNHEX(lrr.Repay_Penalty),#{sKey})) as signed) Repay_Penalty,
	   lrr.Repay_Time,
	   (ifnull(lrr.Repay_Principal,0)+ifnull(lrr.Repay_Interest,0)+ifnull(lrr.Repay_Overdue_Interest,0)+
	   ifnull(lrr.Repay_Overdue,0)+ifnull(lrr.Repay_Penalty,0)) as replayTotal
	   from  Loan_Real_Repay  lrr 
	   left  join Loan_Repay lr on lr.Repay_ID = lrr.Real_Repay_ID 
	   where  lr.Apply_Id=#{projectID}  
    </select>  
</mapper>