<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">     
<mapper namespace="projectAudit">
  <resultMap type = "cn.springmvc.model.ProjectAppProcessEntity" id = "resultProjectAppProcess">
     <id property = "projectID"				column = "Project_ID" />
     <result property = "recordDate"       	column = "Record_Date" />
     <result property = "releaseDate"       column = "Release_Date" />
     <result property = "startDate"       	column = "Start_Date" />
     <result property = "endDate"       	column = "End_Date" />
     <result property = "realEndDate"       column = "Real_End_Date" />
     <result property = "holdDate"       	column = "Hold_Date" />
     <result property = "proEndDate"       	column = "ProEnd_Date" />
     <association property="projectAppRecordEntity" 	resultMap="resultProjectDetail"/>
 </resultMap>
 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "resultProjectDetail">
        <id property = "ID"						column = "Apply_Id" />
		<result property = "memberID"       	column = "Member_ID" />
		<result property = "projectType"    	column = "Project_Type" />
		<result property = "projectBaseID"  	column = "Project_Base_ID" />
		<result property = "repayGuarantee" 	column = "Repay_Guarantee" />
		<result property = "guarantyDescribe"   column = "Guaranty_Describe" />
		<result property = "minStart" 			column = "MinStart" />
		<result property = "increaseRange" 		column = "Increase_Range" />
		<result property = "investMax" 			column = "Invest_Max" />
		<result property = "checkStatu" 		column = "Check_Statu" />
		<result property = "publishStatu" 		column = "Publish_Statu" />  
		<result property = "investStatu" 		column = "Invest_Statu" />
		<result property = "isDirect" 			column = "Is_Direct" />
		<result property = "directPwd"		    column = "Direct_Pwd" />  
        <result property = "assetManagerID" 	column = "Asset_Manager_ID" />
		<result property = "guaranteeID" 		column = "Guarantee_ID" />
		<result property = "rateAddRate" 		column = "Rate_Add_Rate" /> 
		<result property = "rewardRate" 		column = "Reward_Rate" />
		<result property = "rewardIcon" 		column = "Reward_Icon" /> 
		<result property = "investCountMax" 	column = "Invest_Count_Max" />
		<result property = "projectNo" 			column = "Project_No" /> 
      	<result property = "merBillNo" 			column = "Mer_BillNo" /> 
        <result property = "investRate" 		column = "Invest_Rate" />  
        <result property = "logname" 		    column = "Logname" />  
        <result property = "memberType" 		column = "Member_Type" />  
        <result property = "companyID" 		    column = "Company_ID" />
        <result property = "personalID" 		column = "Personal_ID" />  
        <result property = "memberNo" 		    column = "Member_No" />   
        <result property = "personalName" 		column = "Personal_Name" />  
        <result property = "compangName" 		column = "Compang_Name" />  
        <result property = "memberName" 		column = "memberName" />   
        <result property = "recordDate"       	column = "Record_Date" /> 
        <result property = "startDate"       	column = "Start_Date" />
        <result property = "endDate"       	    column = "End_Date" /> 
        <result property = "holdDate"       	column = "Hold_Date" /> 
        <result property = "managementName"     column = "Management_Name" /> 
         <result property = "guaranteeName"     column = "Guarantee_Name" /> 
        <association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"></association>
    </resultMap> 
     <resultMap type = "cn.springmvc.model.ProjectBaseInformationEntity" id ="resultBaseInfoentity">
            <id property = "ID" 				 column = "id" />
			<result property = "projectTitle"    column = "Project_Title" /> 
			<result property = "uses"            column = "Uses" />
			<result property = "repaySource"     column = "Repay_Source" />
			<result property = "amount" 		 column = "Amount" />
			<result property = "projectDescript" column = "Project_Descript" />
			<result property = "deadline" 		 column = "Deadline" />
			<result property = "deadlineType"    column = "Deadline_Type" />
			<result property = "repayWay"        column = "Repay_Way" />
			<result property = "yearRate"        column = "Year_Rate" /> 
			<result property = "replayWays"      column = "name1" /> 
     </resultMap>
    <!-- 根据项目申请ID查询审核项目列表 -->  
	<select id="selectProjectAuitList"  parameterType="product_p2p.kit.pageselect.PageEntity" resultMap="resultProjectDetail" >
	   select gua.Guarantee_Name,mana.Management_Name,par.Apply_Id,pap.Record_Date,par.Project_No,mi.Logname,mi.Member_Type,mi.Member_No,
	   mi.Company_ID,mi.Personal_ID,pbi.Project_Title,par.Project_ID,
	   pty.Project_Name,pbi.Deadline,pbi.Deadline_Type,pbi.Year_Rate,pbi.Repay_Way,par.Invest_Statu,
	   pbi.Amount, par.Project_Base_ID, replayway.name1,par.Check_Statu,
	   CONVERT((AES_DECRYPT(UNHEX(pbiper.Personal_Name),#{map.keys})) using utf8) Personal_Name,
	   CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.keys})) using utf8) Compang_Name, 
	   case when mi.Member_Type = 0 then CONVERT((AES_DECRYPT(UNHEX(pbiper.Personal_Name),#{map.keys})) using utf8)  
            when mi.Member_Type = 1 then CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{map.keys})) using utf8) end 
            as memberName
	   from  Project_App_Record par 
	   left join Project_App_Process pap  on  pap.Apply_Id=par.Apply_Id  
	   left join Project_Base_Info pbi on  par.Project_Base_ID=pbi.Project_Base_ID
	   left join DICT replayway on   replayway.code1= pbi.Repay_Way  and replayway.tcode = 'DICT_HKFS'
	   left join ProjectBaseInfo pty on  par.Project_ID=pty.Project_ID 
	   join Member_Info mi on mi.Member_ID = par.Member_ID  
	   left join Personal_Base_Info  pbiper  on pbiper.Personal_ID=mi.Personal_Id and mi.Member_Type=0
	   left join Company_Info  ci  on ci.Company_ID=mi.Company_ID and mi.Member_Type=1
	   left join Management_Info mana on mana.Management_ID = par.Management_ID
	   left join Guarantee_Info gua on gua.Guarantee_ID = gua.Guarantee_ID
	    <where> 
         <!--  par.Apply_Id=#{map.ID} --> 
	       (
		      par.Apply_Id in
		      (
			       select Apply_Id  
			       from  Project_Check_Record pck
			       left join   Activities_Project ap on  ap.Process_ID=pck.Process_ID
			       where  
			        ap.Process_ID =  
				    (select Process_ID from Process_Project where Indexs &lt;#{map.sIndexs} 
				       and statu =1 order by Indexs desc limit 1) 
				  
			        and pck.Check_Statu = 1
		       ) 
	       
		       or 
		       
		       (select count(Process_ID) from Process_Project where Indexs &lt;#{map.sIndexs} 
		        and statu =1 order by Indexs desc limit 1
		        ) = 0
		    )    
	        
	     <if test = "map.ProjectTitle !=  null"> 
	      and  pbi.Project_Title like '%${map.ProjectTitle}%'
	     </if>
	     <if test = "map.Logname !=  null"> 
	      and  mi.Logname like '%${map.Logname}%'
	     </if>
         <!-- 	     已审核 -->
	     <if test = "map.statu ==  1"> 
	       and par.Apply_Id in
	       (select Apply_Id  
	        from  Project_Check_Record pck
	        left join   Activities_Project ap on  ap.Process_ID=pck.Process_ID
	        where  ap.Process_ID in  (select Process_ID from Process_Project where Indexs =#{map.sIndexs})
	        and pck.Check_Statu != 2  
	        ) 
	     </if>
	     <!-- 	     未审核 -->
	     <if test = "map.statu ==  -1"> 
	        and par.Check_Statu = 0 
	        and par.Apply_Id not in 
	       (select Apply_Id  
	        from  Project_Check_Record pck
	        left join   Activities_Project ap on  ap.Process_ID=pck.Process_ID
	        where  ap.Process_ID in  (select Process_ID from Process_Project where Indexs =#{map.sIndexs}) 
	        and  pck.Check_Statu !=2
	        ) 
	     </if>
	     <if test = "map.name !=  null"> 
	       and ( mi.Company_ID in ( select Company_ID from Company_Info where Compang_Name like '%${map.name}%') 
	       or mi.Personal_ID in (select Personal_Id from Personal_Base_Info where Personal_Name like  '%${map.name}%' )
	       )
	     </if>
	     <if test = "map.startTime !=  null"> 
	       and pap.Record_Date > #{map.startTime} 
	     </if>
	     <if test = "map.endTime !=  null"> 
	       and  #{map.endTime} > pap.Record_Date 
	     </if>
	    </where>
    </select>
     
     <!-- 根据项目申请ID查询借款项目详情 -->  
	<select id="selectProjectdetail"  parameterType="long" resultMap="resultProjectDetail" >
	   select pbi.Project_Title,pbi.Amount,replayway.name1,pbi.Repay_Way,pbi.Uses,
	   pbi.Repay_Source,pbi.Deadline,pbi.Deadline_Type,par.Invest_Max,pbi.Year_Rate,
	   par.MinStart,par.Increase_Range,pbi.Project_Descript,
	   par.Apply_Id, pap.Record_Date,par.Project_No,mi.Logname,mi.Member_Type,par.Project_ID,
	   pty.Project_Name,par.Invest_Statu, par.Project_Base_ID,par.Project_ID, par.Check_Statu
	   from  Project_App_Process pap 
	   left join Project_App_Record par on  pap.Apply_Id=par.Apply_Id  
	   left join Project_Base_Info pbi on  par.Project_Base_ID=pbi.Project_Base_ID
	   left join DICT replayway on   replayway.code1= pbi.Repay_Way  and replayway.tcode = 'DICT_HKFS'
	   left join ProjectBaseInfo pty on  par.Project_ID=pty.Project_ID 
	   left join Member_Info mi on mi.Member_ID = par.Member_ID  
	   where  par.Apply_Id=#{ID}
    </select>
     
     
      <!--  修改项目基本信息 -->  
    <select id="updateProjectDetail"  statementType="CALLABLE" parameterType="Map"> 
	     {call updateProjectDetail(
				#{ApplyId ,	     mode=IN,	jdbcType=BIGINT}, 
				#{projectTitle,	 mode=IN,	jdbcType=VARCHAR},
				#{uses,	         mode=IN,	jdbcType=VARCHAR},
				#{repaySource,	 mode=IN,	jdbcType=VARCHAR},
				#{amount,	     mode=IN,	jdbcType=BIGINT},
				#{projectDescript,	 mode=IN,	jdbcType=VARCHAR},
				#{deadline,	     mode=IN,	jdbcType=INTEGER},
				#{deadlineType,	 mode=IN,	jdbcType=INTEGER},
				#{repayWay,	     mode=IN,	jdbcType=INTEGER},
				#{yearRate,	     mode=IN,	jdbcType=INTEGER},
				#{minStart,	     mode=IN,	jdbcType=INTEGER}, 
				#{increaseRange, mode=IN,	jdbcType=INTEGER},
				#{investMax,	 mode=IN,	jdbcType=INTEGER},
				#{investCountMax,mode=IN,	jdbcType=INTEGER}, 
				#{RepayGuarantee,	 mode=IN,	jdbcType=VARCHAR}, 
		    	#{result,	     mode=OUT,	jdbcType=INTEGER}
    		)}
	</select>
    <!-- 审核 项目  -->  
    <select id="projectAudit"  statementType="CALLABLE" parameterType="Map"> 
	     {call projectAudit(
				#{ApplyId ,	     mode=IN,	jdbcType=BIGINT},
				#{Indexsnow,	mode=IN,	jdbcType=INTEGER}, 
				#{checkStatu,	 mode=IN,	jdbcType=INTEGER},
				#{CheckRemark,	 mode=IN,	jdbcType=VARCHAR},
				#{adminID,	     mode=IN,	jdbcType=INTEGER},
				#{checkid,	     mode=IN,	jdbcType=INTEGER}, 
				#{affix,	     mode=IN,	jdbcType=VARCHAR},
		    	#{result,	     mode=OUT,	jdbcType=INTEGER}
    		)}
	</select>
  
</mapper>