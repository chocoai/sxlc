<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">     

<mapper namespace="Borrowing_management">     
    <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "ApplyFailure">
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" /> 
		<result property = "recordDate"    	    column = "Record_Date" />
		<result property = "checkDate"    	    column = "Check_Date" />
		<result property = "checkRemark"    	column = "Check_Remark" />  
	    <association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>
	</resultMap> 
	 <resultMap type = "cn.springmvc.model.ProjectBaseInformationEntity" id ="resultBaseInfoentity">
            <id property = "id" 	             column = "Project_Base_ID" />
			<result property = "projectTitle"    column = "Project_Title" />  
			<result property = "amount" 		 column = "Amount" /> 
			<result property = "deadline" 		 column = "Deadline" /> 
			<result property = "yearRate"        column = "Year_Rate" />  
			<result property = "deadlineTypes" 	 column = "name1" />  
     </resultMap>
	<!-- 查询申请失败列表 
	    Apply_Id,项目申请记录ID
		Project_No,项目编号
		Project_Title,项目名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Record_Date,提交申请时间
		Check_Date,申请失败时间
		Check_Remark,失败原因
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Record_Date_Min}#{Record_Date_Max}#{Check_Date_Min}#{Check_Date_Max}
		#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
	<select id="getApplyFailure" parameterType="Map" resultMap="ApplyFailure">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,	
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pp.Record_Date,
		  pc.Check_Date,
		  pc.Check_Remark
		FROM project_check_record pc
		  JOIN project_app_record pa
			ON pc.Apply_Id = pa.Apply_Id
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN (SELECT	<!--通过过滤条件获得满足条件的项目ID，并且查出该项目审核的最后一条记录-->
			  pc.Apply_Id,
			  MAX(pc.Check_Date) Check_Date
			FROM project_check_record pc
			  JOIN project_app_record pa
				ON pc.Apply_Id = pa.Apply_Id
			  JOIN project_purpose pp
				ON pp.Purpose_ID = pa.Purpose_ID
			  JOIN member_info mi
				ON pp.Member_ID = mi.Member_ID
			  LEFT JOIN personal_base_info pbi
				ON mi.Personal_Id = pbi.Personal_Id
			  LEFT JOIN Company_Info ci
				ON mi.Personal_Id = ci.Company_ID
			WHERE pa.Check_Statu = - 1
			AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
				  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
				  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
				  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pp.Record_Date>=#{Record_Date_Min})
				  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pp.Record_Date&lt;=#{Record_Date_Max})
				  AND IF(#{Check_Date_Min} IS NULL OR #{Check_Date_Min} = '', 1=1, pc.Check_Date>=#{Check_Date_Min})
				  AND IF(#{Check_Date_Max} IS NULL OR #{Check_Date_Max} = '', 1=1, pc.Check_Date&lt;=#{Check_Date_Max})  
				  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
				  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
			GROUP BY pc.Apply_Id) subq
		ON pc.Apply_Id = subq.Apply_Id AND pc.Check_Date = subq.Check_Date
		LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
				ON mi.Personal_Id = pbi.Personal_Id
		LEFT JOIN Company_Info ci
				ON mi.Personal_Id = ci.Company_ID
		ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				WHEN 'CHECK_DATE' then pc.Check_Date 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "InReview"> 
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />  
		<result property = "recordDate"    	    column = "Record_Date" /> 
		<result property = "apName"    	        column = "AP_Name" /> 
	    <association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>
	</resultMap> 
	<!-- 查询审核中（申请状态为未审核且）项目列表
		Apply_Id,项目申请记录ID
		Project_No,借款编号
		Project_Title,借款名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Record_Date,提交申请时间
		AP_Name,借款审核阶段
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Record_Date_Min}#{Record_Date_Max}#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
	<select id="getInReview" parameterType="Map" resultMap="InReview">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pp.Record_Date,
		  (select ap.AP_Name from Activities_Project ap join Process_Project prp on ap.Process_ID = prp.Process_ID where prp.Batch = sbq.Batch) AP_Name	<!--根据前面获得的审批阶段获得审核阶段值-->
		FROM project_app_record pa
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN (SELECT 	<!--关联得出审批流的阶段Batch-->
					subq.Apply_Id,
					IFNULL(prp.Batch,0)+1 Batch 
			    FROM(SELECT	<!--通过过滤条件获得满足条件的项目ID，并且查出该项目审核的最后一条记录-->
					  pa.Apply_Id,
					  MAX(pc.Check_Date) Check_Date
					FROM project_app_record pa
					  LEFT JOIN project_check_record pc
						ON pc.Apply_Id = pa.Apply_Id
					  JOIN project_purpose pp
						ON pp.Purpose_ID = pa.Purpose_ID
					  JOIN member_info mi
						ON pp.Member_ID = mi.Member_ID
					  LEFT JOIN personal_base_info pbi
						ON mi.Personal_Id = pbi.Personal_Id
					  LEFT JOIN Company_Info ci
						ON mi.Personal_Id = ci.Company_ID
					WHERE pa.Check_Statu = 0
					  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
					  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
					  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
					  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pp.Record_Date>=#{Record_Date_Min})
					  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pp.Record_Date&lt;=#{Record_Date_Max}) 
					  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
					  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
					AND pc.Check_Statu = 1
					GROUP BY pa.Apply_Id) subq
					LEFT JOIN project_check_record pc
					  ON pc.Apply_Id = subq.Apply_Id AND pc.Check_Date = subq.Check_Date
					LEFT JOIN process_project prp ON prp.Process_ID = pc.Process_ID) sbq
		ON pa.Apply_Id = sbq.Apply_Id
		LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
				ON mi.Personal_Id = pbi.Personal_Id
		LEFT JOIN Company_Info ci
				ON mi.Personal_Id = ci.Company_ID
		ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select> 
   <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "NotRelease">
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />  
		<result property = "recordDate"    	    column = "Record_Date" />
		<result property = "checkDate"    	    column = "Check_Date" />  
		<association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>
	 </resultMap>  
		<!-- 查询未发布（最后一步未审核，倒数第二步已通过）项目列表
		Apply_Id,项目申请记录ID
		Project_No,项目编号
		Project_Title,项目名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Record_Date,项目申请时间
		Check_Date,上一步审核时间
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Record_Date_Min}#{Record_Date_Max}#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
	<select id="getNotRelease" parameterType="Map" resultMap="NotRelease">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,	
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pp.Record_Date,
		  pc.Check_Date
		FROM project_check_record pc
		  JOIN project_app_record pa
			ON pc.Apply_Id = pa.Apply_Id
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN (SELECT	<!--通过过滤条件获得满足条件的项目ID，未发布的记录对应的审核记录-->
			  pc.App_Check_Id
			FROM project_check_record pc
			  JOIN project_app_record pa
				ON pc.Apply_Id = pa.Apply_Id
			  JOIN project_purpose pp
				ON pp.Purpose_ID = pa.Purpose_ID
			  JOIN member_info mi
				ON pp.Member_ID = mi.Member_ID
			  JOIN Process_Project prp
			    ON pc.Process_ID = prp.Process_ID
			  LEFT JOIN personal_base_info pbi
				ON mi.Personal_Id = pbi.Personal_Id
			  LEFT JOIN Company_Info ci
				ON mi.Personal_Id = ci.Company_ID
			WHERE pa.Check_Statu = 0 AND pc.Check_Statu = 1
			AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
				  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
				  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
				  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pp.Record_Date>=#{Record_Date_Min})
				  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pp.Record_Date&lt;=#{Record_Date_Max}) 
				  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
				  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
				  AND prp.Batch = (select max(prp.Batch)-1 from Process_Project prp)	<!--申请未通过且倒数第二步审核已经通过的记录为未发布-->
			) subq  
		ON pc.App_Check_Id = subq.App_Check_Id
		LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
				ON mi.Personal_Id = pbi.Personal_Id
		LEFT JOIN Company_Info ci
				ON mi.Personal_Id = ci.Company_ID
		ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select> 
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "Investment">
         <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />  
		<result property = "releaseDate"    	column = "Release_Date" />
		<result property = "startDate"    	    column = "Start_Date" />
		<result property = "endDate"    	    column = "End_Date" />
		<result property = "investRate"    	    column = "Invest_Rate" />
		<association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association> 
	</resultMap>  
		<!-- 查询投资中项目列表
		Apply_Id，项目申请记录ID
		Project_No,借款编号
		Project_Title,借款名称
		Logname,借款人用户名
		
		Personal_Name,借款人姓名
		Project_Name,产品类型
		
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		
		Release_Date,项目发布日期
		Start_Date,投标开始日期
		End_Date,投标结束日期
		Invest_Rate,借款进度
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Record_Date_Min}#{Record_Date_Max}#{Deadline}#{Deadline_Type}
		#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
	<select id="getInvestment" parameterType="Map" resultMap="Investment">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,	
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pap.Release_Date,
		  pap.Start_Date,
		  pap.End_Date,
		  pa.Invest_Rate
		FROM project_app_record pa
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN Project_App_Process pap
		    ON pa.Apply_Id = pap.Apply_Id
		  LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
			ON mi.Personal_Id = pbi.Personal_Id
		  LEFT JOIN Company_Info ci
			ON mi.Personal_Id = ci.Company_ID
		WHERE pa.Check_Statu = 1 AND pa.Invest_Statu = 0 <!--申请已通过并且在投资中-->
			  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
			  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
			  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
			  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pp.Record_Date>=#{Record_Date_Min})
			  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pp.Record_Date&lt;=#{Record_Date_Max})
			  AND IF(#{Deadline} IS NULL OR #{Deadline} = '', 1=1, pp.Deadline=#{Deadline})
			  AND IF(#{Deadline_Type} IS NULL OR #{Deadline_Type} = '', 1=1, pp.Deadline_Type=#{Deadline_Type})  
			  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
			  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				WHEN 'INVEST_RATE' then pa.Invest_Rate 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "ForLending">
         <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />    
		<result property = "releaseDate"    	column = "Release_Date" />
		<result property = "startDate"    	    column = "Start_Date" />
		<result property = "endDate"    	    column = "End_Date" />
		<result property = "investRate"    	    column = "Invest_Rate" /> 
		<association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association> 
	</resultMap>  
		<!-- 查询待放款项目列表
		Apply_Id,项目申请记录ID
		Project_No,借款编号
		Project_Title,借款名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Release_Date,项目发布日期
		Start_Date,投标开始日期
		End_Date,投标结束日期
		Invest_Rate,借款进度
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Record_Date_Min}#{Record_Date_Max}#{Deadline}#{Deadline_Type}
		#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
	<select id="getForLending" parameterType="Map" resultMap="ForLending">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,	
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pap.Release_Date,
		  pap.Start_Date,
		  pap.End_Date,
		  pa.Invest_Rate
		FROM project_app_record pa
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN Project_App_Process pap
		    ON pa.Apply_Id = pap.Apply_Id
		  LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
			ON mi.Personal_Id = pbi.Personal_Id
		  LEFT JOIN Company_Info ci
			ON mi.Personal_Id = ci.Company_ID
		WHERE pa.Invest_Statu = 2 <!--投标完成-->
			  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
			  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
			  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
			  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pp.Record_Date>=#{Record_Date_Min})
			  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pp.Record_Date&lt;=#{Record_Date_Max})
			  AND IF(#{Deadline} IS NULL OR #{Deadline} = '', 1=1, pp.Deadline=#{Deadline})
			  AND IF(#{Deadline_Type} IS NULL OR #{Deadline_Type} = '', 1=1, pp.Deadline_Type=#{Deadline_Type})  
			  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
			  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				WHEN 'INVEST_RATE' then pa.Invest_Rate 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "InvestFailure"> 
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />  
		<result property = "releaseDate"    	column = "Release_Date" />
		<result property = "startDate"    	    column = "Start_Date" />
		<result property = "endDate"    	    column = "End_Date" />
		<result property = "investRate"    	    column = "Invest_Rate" />
		<result property = "realEndDate"    	column = "Real_End_Date" />
		<association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>  
	</resultMap> 
		<!-- 查询已流标项目列表
		Apply_Id,项目申请记录ID
		Project_No,借款编号
		Project_Title,借款名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Release_Date,项目发布日期
		Start_Date,投标开始日期
		End_Date,投标结束日期
		Invest_Rate,借款进度
		Real_End_Date,实际投标结束时间
	 --> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Record_Date_Min}#{Record_Date_Max}#{Deadline}
		#{Deadline_Type}#{Real_End_Date_Min}#{Real_End_Date_Max}#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
	<select id="getInvestFailure" parameterType="Map" resultMap="InvestFailure">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,	
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pap.Release_Date,
		  pap.Start_Date,
		  pap.End_Date,
		  pa.Invest_Rate,
		  pap.Real_End_Date
		FROM project_app_record pa
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN Project_App_Process pap
		    ON pa.Apply_Id = pap.Apply_Id
		  LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
			ON mi.Personal_Id = pbi.Personal_Id
		  LEFT JOIN Company_Info ci
			ON mi.Personal_Id = ci.Company_ID
		WHERE pa.Invest_Statu = 1 <!--已流标-->
			  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
			  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
			  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
			  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pp.Record_Date>=#{Record_Date_Min})
			  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pp.Record_Date&lt;=#{Record_Date_Max})
			  AND IF(#{Deadline} IS NULL OR #{Deadline} = '', 1=1, pp.Deadline=#{Deadline})
			  AND IF(#{Deadline_Type} IS NULL OR #{Deadline_Type} = '', 1=1, pp.Deadline_Type=#{Deadline_Type})  
			  AND IF(#{Real_End_Date_Min} IS NULL OR #{Real_End_Date_Min} = '', 1=1, pap.Real_End_Date>=#{Real_End_Date_Min})
			  AND IF(#{Real_End_Date_Max} IS NULL OR #{Real_End_Date_Max} = '', 1=1, pap.Real_End_Date&lt;=#{Real_End_Date_Max})
			  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
			  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				WHEN 'INVEST_RATE' then pa.Invest_Rate 
				WHEN 'REAL_END_DATE' then pap.Real_End_Date 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "InPayment">
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />  
		<result property = "releaseDate"    	column = "Release_Date" />
		<result property = "startDate"    	    column = "Start_Date" />
		<result property = "endDate"    	    column = "End_Date" />
		<result property = "investRate"    	    column = "Invest_Rate" />  
		<result property = "holdDate"    	    column = "Hold_Date" />
		<result property = "endamount"    	    column = "Invest_Amount_Valid" />
		<result property = "repayTime"    	    column = "Repay_Time" />
		<result property = "overdue"    	    column = "Overdue" />  
		<association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>  
	</resultMap>  
		<!-- 查询还款中项目列表
		Apply_Id,项目申请记录ID
		Project_No,项目编号
		Project_Title,项目名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Release_Date,项目发布日期
		Start_Date,投标开始日期
		End_Date,投标结束日期
		Invest_Rate,借款进度
		Hold_Date,放款时间
		Invest_Amount_Valid,实际借款金额
		Repay_Time,最近一期还款时间,
		Overdue,是否有逾期
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Release_Date_Min}#{Release_Date_Max}#{Deadline}#{Deadline_Type}#{Amount_Min}
		#{Amount_Max}#{Invest_Amount_Valid_Min}#{Invest_Amount_Valid_MAX}#{Repay_Time_Min}#{Repay_Time_Max}#{ordercolumn}
	-->
 
	<select id="getInPayment" parameterType="Map" resultMap="InPayment">
		SELECT
		    p.Apply_Id,
			p.Project_No,
			prbi.Project_Title,
			p.Logname,
			p.Personal_Name,
			pb.Project_Name,
			p.Deadline,
			p.name1,
			p.Amount,
			p.Year_Rate,
			p.Release_Date,
			p.Start_Date,
			p.End_Date,
			p.Invest_Rate,
			p.Hold_Date,
			p.Invest_Amount_Valid,
			p.Repay_Time,
			p.Overdue
		FROM 
		  (SELECT	<!--先利用其它条件统计还款中记录数，再用实际借款金额和最后一期还款时间过滤结果集-->
			  pa.Project_ID,
			  pa.Project_Base_ID,
			  pa.Apply_Id,
			  pa.Project_No,
			  mi.Logname,
			  CASE
				  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
				  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
			  END Personal_Name,	
			  pp.Deadline,
			  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
			  pp.Amount,
			  pp.Year_Rate,
			  pp.Record_Date,
			  pap.Release_Date,
			  pap.Start_Date,
			  pap.End_Date,
			  pa.Invest_Rate,
			  pap.Hold_Date,
			  (SELECT	<!--统计实际借款金额-->
				  SUM(IFNULL(CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{skey})) AS SIGNED),0))
				FROM invest_record ir
				WHERE ir.Apply_Id = pa.Apply_Id AND ir.IsValid = 0) Invest_Amount_Valid,
			  (SELECT	<!--统计最近一期还款时间-->
				  MAX(lrr.Repay_Time)
				FROM Loan_Real_Repay lrr
				WHERE lrr.Apply_Id = pa.Apply_Id) Repay_Time,
			  (SELECT	<!--统计是否逾期：0未逾期 1逾期-->
				  (CASE SIGN(COUNT(1))
					  WHEN 0 THEN 0 ELSE 1
					END) 
				FROM loan_repay lr
				WHERE lr.IsValid = 0 AND (lr.Statu between 0 and 1) AND lr.Repay_MaxTime &lt;= NOW()
					  AND lr.Apply_Id = pa.Apply_Id) Overdue
			FROM project_app_record pa
			  JOIN project_purpose pp
				ON pp.Purpose_ID = pa.Purpose_ID
			  JOIN member_info mi
				ON pp.Member_ID = mi.Member_ID
			  JOIN Project_App_Process pap
				ON pa.Apply_Id = pap.Apply_Id
			  LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
				ON mi.Personal_Id = pbi.Personal_Id
			  LEFT JOIN Company_Info ci
				ON mi.Personal_Id = ci.Company_ID
			WHERE pa.Invest_Statu = 3 <!--还款中-->
				  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
				  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
				  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
				  AND IF(#{Release_Date_Min} IS NULL OR #{Release_Date_Min} = '', 1=1, pap.Release_Date>=#{Release_Date_Min})
				  AND IF(#{Release_Date_Max} IS NULL OR #{Release_Date_Max} = '', 1=1, pap.Release_Date&lt;=#{Release_Date_Max})
				  AND IF(#{Deadline} IS NULL OR #{Deadline} = '', 1=1, pp.Deadline=#{Deadline})
				  AND IF(#{Deadline_Type} IS NULL OR #{Deadline_Type} = '', 1=1, pp.Deadline_Type=#{Deadline_Type})  
				  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
				  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max})) p
		  JOIN projectbaseinfo pb
			ON p.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON p.Project_Base_ID = prbi.Project_Base_ID 
		WHERE IF(#{Invest_Amount_Valid_Min} IS NULL OR #{Invest_Amount_Valid_MIN} = '', 1=1, p.Invest_Amount_Valid>=#{Invest_Amount_Valid_Min})
			  AND IF(#{Invest_Amount_Valid_MAX} IS NULL OR #{Invest_Amount_Valid_MAX} = '', 1=1, p.Invest_Amount_Valid&lt;=#{Invest_Amount_Valid_MAX})
			  AND IF(#{Repay_Time_Min} IS NULL OR #{Repay_Time_Min} = '', 1=1, p.Repay_Time>=#{Repay_Time_Min})
			  AND IF(#{Repay_Time_Max} IS NULL OR #{Repay_Time_Max} = '', 1=1, p.Repay_Time&lt;=#{Repay_Time_Max})
	    ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
			WHEN 'AMOUNT' THEN p.Amount 
			WHEN 'INVEST_RATE' then p.Invest_Rate 
			WHEN 'RECORD_DATE' then p.Record_Date 
			WHEN 'REPAY_TIME' then p.Repay_Time
			ELSE p.Amount 
		  END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "SettlementOff">
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" /> 
		<result property = "logname"    	    column = "Logname" />
		<result property = "memberName"    	    column = "Personal_Name" />
		<result property = "projectName"    	column = "Project_Name" />  
		<result property = "releaseDate"    	column = "Release_Date" />
		<result property = "startDate"    	    column = "Start_Date" />
		<result property = "endDate"    	    column = "End_Date" /> 
		<result property = "holdDate"    	    column = "Hold_Date" />
		<result property = "settleDate"    	    column = "Settle_Date" />
		<result property = "sdRepayAmount"    	column = "SDRepay_Amount" /> 
		<result property = "repayAmount"        column = "Repay_Amount" />  
		<result property = "endamount"    	    column = "Invest_Amount_Valid" />
	    <association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>  
	 </resultMap>
	 
		<!-- 查询已结清项目列表
		Apply_Id,项目申请记录ID
		Project_No,项目编号
		Project_Title,项目名称
		Logname,借款人用户名
		Personal_Name,借款人姓名
		Project_Name,产品类型
		Deadline,借款期限
		name1,借款期限类型
		Amount,借款金额
		Year_Rate,年化利率
		Release_Date,项目发布日期
		Start_Date,投标开始日期
		End_Date,投标结束日期
		Hold_Date,放款时间
		Settle_Date,结清时间
		SDRepay_Amount,实际应还总额
		Repay_Amount,实际还款总额
		Invest_Amount_Valid,实际借款金额
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Logname}#{Personal_Name}#{Release_Date_Min}#{Release_Date_Max}#{Deadline}
		#{Deadline_Type}#{Amount_Min}#{Amount_Max}#{ordercolumn}
	-->
 
	<select id="getSettlementOff" parameterType="Map" resultMap="SettlementOff">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,	
		  pb.Project_Name,
		  pp.Deadline,
		  (select d.name1 from dict d where d.code1 = pp.Deadline_Type AND d.tcode = 'DICT_QXLX') name1,
		  pp.Amount,
		  pp.Year_Rate,
		  pap.Release_Date,
		  pap.Start_Date,
		  pap.End_Date,
		  pap.Hold_Date,
		  pap.Settle_Date,
		  (SELECT	<!--统计实际借款金额-->
			  SUM(IFNULL(CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{skey})) AS SIGNED),0))
			FROM invest_record ir
			WHERE ir.Apply_Id = pa.Apply_Id AND ir.IsValid = 0) Invest_Amount_Valid,
		  (SELECT	<!--统计应还款总额-->
			  SUM(IFNULL(CAST((AES_DECRYPT(UNHEX(lr.SDRepay_Principal),#{skey})) AS SIGNED),0)+IFNULL(CAST((AES_DECRYPT(UNHEX(lr.SDRepay_Interest),#{skey})) AS SIGNED),0))
			FROM Loan_Repay lr
			WHERE lr.Apply_Id = pa.Apply_Id AND lr.IsValid = 0) SDRepay_Amount,
		  (SELECT	<!--统计实际还款总额-->
			  SUM(IFNULL(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Principal),#{skey})) AS SIGNED),0)+IFNULL(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Interest),#{skey})) AS SIGNED),0)+IFNULL(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Overdue_Interest),#{skey})) AS SIGNED),0)+IFNULL(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Overdue),#{skey})) AS SIGNED),0)+IFNULL(CAST((AES_DECRYPT(UNHEX(lrr.Repay_Penalty),#{skey})) AS SIGNED),0))
			FROM Loan_Real_Repay lrr
			WHERE lrr.Apply_Id = pa.Apply_Id) Repay_Amount
		FROM project_app_record pa
		  JOIN projectbaseinfo pb
			ON pa.Project_Id = pb.Project_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pp.Purpose_ID = pa.Purpose_ID
		  JOIN member_info mi
			ON pp.Member_ID = mi.Member_ID
		  JOIN Project_App_Process pap
		    ON pa.Apply_Id = pap.Apply_Id
		  LEFT JOIN personal_base_info pbi	<!--同时连接个人与企业信息，查询时根据会员类型确认显示字段-->
			ON mi.Personal_Id = pbi.Personal_Id
		  LEFT JOIN Company_Info ci
			ON mi.Personal_Id = ci.Company_ID
		WHERE pa.Invest_Statu = 4 <!--已结清-->
			  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
			  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
			  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
			  AND IF(#{Release_Date_Min} IS NULL OR #{Release_Date_Min} = '', 1=1, pap.Release_Date>=#{Release_Date_Min})
			  AND IF(#{Release_Date_Max} IS NULL OR #{Release_Date_Max} = '', 1=1, pap.Release_Date&lt;=#{Release_Date_Max})
			  AND IF(#{Deadline} IS NULL OR #{Deadline} = '', 1=1, pp.Deadline=#{Deadline})
			  AND IF(#{Deadline_Type} IS NULL OR #{Deadline_Type} = '', 1=1, pp.Deadline_Type=#{Deadline_Type})  
			  AND IF(#{Amount_Min} IS NULL OR #{Amount_Min} = '', 1=1, pp.Amount>=#{Amount_Min})
			  AND IF(#{Amount_Max} IS NULL OR #{Amount_Max} = '', 1=1, pp.Amount&lt;=#{Amount_Max}) 
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'AMOUNT' THEN pp.Amount 
				WHEN 'RECORD_DATE' then pp.Record_Date 
				WHEN 'INVEST_RATE' then pa.Invest_Rate 
				ELSE pp.Amount 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.ProjectAppRecordEntity" id = "Borrowing">
        <id property = "applyId"				column = "Apply_Id" />
		<result property = "projectNo"       	column = "Project_No" />
		<result property = "recordDate"    	    column = "Record_Date" />  
		<result property = "releaseDate"    	column = "Release_Date" /> 
		<result property = "endamount"    	    column = "Invest_Amount_Valid" /> 
		<result property = "holdDate"    	    column = "Hold_Date" />  
		<result property = "settleDate"    	    column = "Settle_Date" /> 
		<result property = "statu"    	        column = "Statu" />
		<result property = "guaranteeName"    	column = "Guarantee_Name" />
		<association property="projectBaseInfoentity" column="id" resultMap="resultBaseInfoentity"> 
	    </association>  
	</resultMap>  
		<!-- 借款项目查询
		Apply_Id,项目申请记录ID
		Project_No,项目编号
		Project_Title,项目名称
		Record_Date,提交借款意向时间
		Release_Date,审批通过时间
		Amount,借款金额
		Invest_Amount_Valid,实际借款金额
		Guarantee_Name,担保机构名称
		Statu,项目状态
		Hold_Date,放款时间
		Settle_Date,结清时间
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Project_Title}#{Record_Date_Min}#{Record_Date_Max}#{Release_Date_Min}#{Release_Date_Max}
		#{Hold_Date_Min}#{Hold_Date_Max}#{Settle_Date_Min}#{Settle_Date_Max}#{Guarantee_Name}#{Statu}#{Type}#{ordercolumn}
	-->
	<select id="getBorrowing" parameterType="Map" resultMap="Borrowing">
		SELECT
		  pa.Apply_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  pap.Record_Date,
		  pap.Release_Date,
		  pp.Amount,
		  (SELECT	<!--统计实际借款金额-->
			  SUM(CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{skey})) AS SIGNED))
			FROM invest_record ir
			WHERE ir.Apply_Id = pa.Apply_Id AND ir.IsValid = 0) Invest_Amount_Valid,
		  CONVERT((AES_DECRYPT(UNHEX(gi.Guarantee_Name),#{skey})) using utf8) Guarantee_Name,
		  CASE pa.Check_Statu	<!--项目状态由申请状态、发布状态、融资状态三个阶段共同决定-->
			  WHEN 1 THEN (CASE pa.Publish_Statu
				  WHEN 2 THEN pa.Invest_Statu ELSE pa.Publish_Statu
				END) ELSE pa.Check_Statu
			END Statu,
		  pap.Hold_Date,
		  pap.Settle_Date
		FROM project_app_record pa
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		  JOIN project_purpose pp
			ON pa.Purpose_ID = pp.Purpose_ID
		  LEFT JOIN project_app_process pap
			ON pa.Apply_Id = pap.Apply_Id
		  LEFT JOIN guarantee_info gi
			ON pa.Guarantee_ID = gi.Guarantee_ID
		WHERE IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
			  AND IF(#{Project_Title} IS NULL, 1=1, LOCATE(#{Project_Title},prbi.Project_Title)>0)
			  AND IF(#{Record_Date_Min} IS NULL OR #{Record_Date_Min} = '', 1=1, pap.Record_Date>=#{Record_Date_Min})
			  AND IF(#{Record_Date_Max} IS NULL OR #{Record_Date_Max} = '', 1=1, pap.Record_Date&lt;=#{Record_Date_Max})
			  AND IF(#{Release_Date_Min} IS NULL OR #{Release_Date_Min} = '', 1=1, pap.Release_Date>=#{Release_Date_Min})
			  AND IF(#{Release_Date_Max} IS NULL OR #{Release_Date_Max} = '', 1=1, pap.Release_Date&lt;=#{Release_Date_Max})
			  AND IF(#{Hold_Date_Min} IS NULL OR #{Hold_Date_Min} = '', 1=1, pap.Hold_Date>=#{Hold_Date_Min})
			  AND IF(#{Hold_Date_Max} IS NULL OR #{Hold_Date_Max} = '', 1=1, pap.Hold_Date&lt;=#{Hold_Date_Max})
			  AND IF(#{Settle_Date_Min} IS NULL OR #{Settle_Date_Min} = '', 1=1, pap.Settle_Date>=#{Settle_Date_Min})
			  AND IF(#{Settle_Date_Max} IS NULL OR #{Settle_Date_Max} = '', 1=1, pap.Settle_Date&lt;=#{Settle_Date_Max})
			  AND IF(#{Guarantee_Name} IS NULL, 1=1, LOCATE(#{Guarantee_Name},CONVERT((AES_DECRYPT(UNHEX(gi.Guarantee_Name),#{skey})) using utf8))>0)
		  <!--项目状态根据阶段分为申请状态(DICT_SQZT)、项目发布状态(DICT_XMFBZT)、融资状态(DICT_RZZT)、所以需要同时传入编码和类型来判断-->
			  AND IF(#{Statu} IS NULL OR #{Statu} = '', 1=1, CASE #{Type}
																WHEN 'DICT_SQZT' THEN pa.Check_Statu = #{Statu}
																WHEN 'DICT_XMFBZT' THEN pa.Publish_Statu = #{Statu}
																WHEN 'DICT_RZZT' THEN pa.Invest_Statu = #{Statu}
															  END)
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'RECORD_DATE' THEN pap.Record_Date
				WHEN 'RELEASE_DATE' then pap.Release_Date
				WHEN 'HOLD_DATE' then pap.Hold_Date
				WHEN 'SETTLE_DATE' then pap.Settle_Date
				ELSE pap.Record_Date 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.InvestEntity" id = "InvestmentProject">
        <id property = "id"				       		column = "Invest_Id" />
		<result property = "projectNo"       		column = "Project_No" />
		<result property = "projectTitle"    		column = "Project_Title" />  
		<result property = "investDate"    	    	column = "Invest_Date" />  
		<result property = "investAmountValid"  	column = "Invest_Amount_Valid" /> 
		<result property = "investGiftAmount"   	column = "Invest_Gift_Amount" /> 
		<result property = "investVouchersAmount"  	column = "Invest_Vouchers_Amount" /> 
		<result property = "backAmount"    	       	column = "Back_Amount" />  
		<result property = "holdDate"    	    	column = "Hold_Date" /> 
		<result property = "investRate"    	    	column = "Invest_Rate" /> 
	</resultMap>  
	<!-- 投资项目查询
		Invest_Id,投资记录ID
		Project_No,项目编号
		Project_Title,项目名称
		Invest_Date,投资时间
		Invest_Amount_Valid,投资总金额
		Invest_Gift_Amount,使用红包总金额
		Invest_Vouchers_Amount,使用代金券总额
		Back_Amount,使用返现券总额
		Hold_Date,放款时间
		Invest_Rate,投资总进度
	--> 
	<!--传入参数整理
		#{skey}#{Project_No}#{Project_Title}#{Invest_Date_Min}#{Invest_Date_Max}#{Hold_Date_Min}#{Hold_Date_Max}#{ordercolumn}
	-->
	<select id="getInvestmentProject" parameterType="Map" resultMap="InvestmentProject">
		SELECT
		  ir.Invest_Id,
		  pa.Project_No,
		  prbi.Project_Title,
		  ir.Invest_Date,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount_Valid),#{skey})) AS SIGNED) Invest_Amount_Valid,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Gift_Amount),#{skey})) AS SIGNED) Invest_Gift_Amount,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Vouchers_Amount),#{skey})) AS SIGNED) Invest_Vouchers_Amount,
		  CAST((AES_DECRYPT(UNHEX(ir.Back_Amount),#{skey})) AS SIGNED) Back_Amount,
		  ir.Hold_Date,
		  pa.Invest_Rate
		FROM invest_record ir
		  JOIN project_app_record pa
			ON ir.Apply_Id = pa.Apply_Id
		  JOIN project_base_info prbi
			ON pa.Project_Base_ID = prbi.Project_Base_ID
		WHERE ir.IsValid = 0	<!--0代表有效-->
			  AND IF(#{Project_No} IS NULL OR #{Project_No} = '', 1=1, pa.Project_No = #{Project_No})
			  AND IF(#{Project_Title} IS NULL, 1=1, LOCATE(#{Project_Title},prbi.Project_Title)>0)
			  AND IF(#{Invest_Date_Min} IS NULL OR #{Invest_Date_Min} = '', 1=1, ir.Invest_Date>=#{Invest_Date_Min})
			  AND IF(#{Invest_Date_Max} IS NULL OR #{Invest_Date_Max} = '', 1=1, ir.Invest_Date&lt;=#{Invest_Date_Max})
			  AND IF(#{Hold_Date_Min} IS NULL OR #{Hold_Date_Min} = '', 1=1, ir.Hold_Date>=#{Hold_Date_Min})
			  AND IF(#{Hold_Date_Max} IS NULL OR #{Hold_Date_Max} = '', 1=1, ir.Hold_Date&lt;=#{Hold_Date_Max}) 
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'INVEST_DATE' THEN ir.Invest_Date
				WHEN 'INVEST_AMOUNT_VALID' then Invest_Amount_Valid
				WHEN 'INVEST_GIFT_AMOUNT' then Invest_Gift_Amount 
				WHEN 'INVEST_VOUCHERS_AMOUNT' then Invest_Vouchers_Amount 
				WHEN 'BACK_AMOUNT' then Back_Amount 
				WHEN 'HOLD_DATE' THEN ir.Hold_Date
				ELSE ir.Invest_Date
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	 <resultMap type = "cn.springmvc.model.InvestEntity" id = "InvestmentRecord">
        <id property = "id"				          column = "Invest_Id" />
		<result property = "holdDate"       	  column = "Hold_Date" />
		<result property = "logname"    	      column = "Logname" />  
		<result property = "membername"    	      column = "Personal_Name" />  
		<result property = "investAmount"    	  column = "Invest_Amount" /> 
		<result property = "investGiftAmount"     column = "Invest_Gift_Amount" /> 
		<result property = "investVouchersAmount" column = "Invest_Vouchers_Amount" /> 
		<result property = "isBack"    	          column = "Is_Back" />   
	</resultMap>
	 
	<!-- 查看投资记录
		Invest_Id,投资记录ID
		Hold_Date,投资完成时间
		Logname,会员用户名
		Personal_Name,会员姓名
		Invest_Amount,投资金额	
		Invest_Gift_Amount,使用红包抵扣金额
		Invest_Vouchers_Amount,使用代金券抵扣金额
		Is_Back,是否使用返现券
	--> 
	<!--传入参数整理
		#{skey}#{applyID}#{Logname}#{Personal_Name}#{Hold_Date_Min}#{Hold_Date_Max}#{ordercolumn}
	-->
	<select id="getInvestmentRecord" parameterType="Map" resultMap="InvestmentRecord">
		SELECT
		  ir.Invest_Id,
		  ir.Hold_Date,
		  mi.Logname,
		  CASE
			  WHEN mi.Member_Type = 0 THEN CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8)
			  WHEN mi.Member_Type = 1 THEN CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8)
		  END Personal_Name,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Amount),#{skey})) AS SIGNED) Invest_Amount,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Gift_Amount),#{skey})) AS SIGNED) Invest_Gift_Amount,
		  CAST((AES_DECRYPT(UNHEX(ir.Invest_Vouchers_Amount),#{skey})) AS SIGNED) Invest_Vouchers_Amount,
		  (CASE CAST((AES_DECRYPT(UNHEX(ir.Back_Amount),#{skey})) AS SIGNED)
			WHEN 0 THEN 0
			ELSE 1
		   END) Is_Back
		FROM invest_record ir
		  JOIN member_info mi
			ON ir.Member_ID = mi.Member_ID
		  LEFT JOIN personal_base_info pbi
			ON mi.Personal_Id = pbi.Personal_Id
		  LEFT JOIN Company_Info ci
			ON mi.Personal_Id = ci.Company_ID
		WHERE ir.IsValid = 0	<!--0代表有效-->
			  AND IF(#{Logname} IS NULL, 1=1, LOCATE(#{Logname},mi.Logname)>0)
			  AND IF(#{Personal_Name} IS NULL, 1=1, LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(pbi.Personal_Name),#{skey})) using utf8))>0 or LOCATE(#{Personal_Name},CONVERT((AES_DECRYPT(UNHEX(ci.Compang_Name),#{skey})) using utf8))>0)
			  AND IF(#{Hold_Date_Min} IS NULL OR #{Hold_Date_Min} = '', 1=1, ir.Hold_Date>=#{Hold_Date_Min})
			  AND IF(#{Hold_Date_Max} IS NULL OR #{Hold_Date_Max} = '', 1=1, ir.Hold_Date&lt;=#{Hold_Date_Max})
			  AND IF(#{applyID} IS NULL OR #{applyID} = '', 1=1, ir.Apply_ID = #{applyID}) 
		  ORDER BY (case upper(#{ordercolumn})  <!--根据传入参数值选择排序条件-->
				WHEN 'HOLD_DATE' THEN ir.Hold_Date
				WHEN 'INVEST_AMOUNT' then Invest_Amount
				WHEN 'INVEST_GIFT_AMOUNT' then Invest_Gift_Amount 
				WHEN 'INVEST_VOUCHERS_AMOUNT' then Invest_Vouchers_Amount 
				WHEN 'IS_BACK' then Is_Back
				ELSE ir.Hold_Date	 
			END)
		<if test="orderDsec==1">ASC</if>
		<if test="orderDsec==0">DESC</if>
	</select>
	
</mapper>
