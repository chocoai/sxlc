<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">     
<mapper namespace="friendshipUnit">
    <resultMap type="cn.springmvc.model.FriendshipUnitEntity" id="resultListFriendshipLink">
        <id column="ID" 				property="id" />
		<result column="Name" 			property="name" />
		<result column="Logo" 			property="logo" />
		<result column="URL" 			property="url" />
		<result column="Introduction"   property="introduction" />
		<result column="Statu" 			property="statu" />
		<result column="CreateTime" 	property="createTime" />
		<result column="Indexs" 		property="indexs" />
		<result column="Opt_Id" 		property="optId" />
		<result column="Opt_Date" 		property="optDate" />
		<result column="adminName" 		property="adminName" />
    </resultMap> 
    <!-- 查询友情链接列表 -->  
	<select id="selectFriendShipLinkList" parameterType="product_p2p.kit.pageselect.PageEntity"   resultMap="resultListFriendshipLink">
	   select fl.ID,fl.Name,fl.Logo,fl.URL,fl.Introduction,fl.Statu,fl.Indexs,fl.Opt_Id,
	   fl.CreateTime,fl.Opt_Date,a.adminName
	   from  FriendShip_Link  fl
	   LEFT JOIN Admin a on a.ID=fl.Opt_Id
         <where>  
            <if test="map.name != null">  
                Name like  '%{name}%'  
            </if>   
            <if test="map.statu != -1">  
                and fl.Statu=#{map.statu}
            </if>  
                order by fl.CreateTime desc
        </where>  
    </select>       
	<!-- 新增友情链接 -->  
	<insert id="insertFriendShipLink"  parameterType="cn.springmvc.model.FriendshipUnitEntity">    
		insert into 
		FriendShip_Link(ID,    Name,   Logo,   URL,    Introduction,   Indexs,  Opt_Id) 
		values         (#{id},#{name},#{logo},#{url},#{introduction},#{indexs},#{optId})    
	</insert> 
	<!-- 查询友情链接是否存在 -->  
	<select id="selectFriendShipLinkIsExistByNAme"  parameterType="cn.springmvc.model.FriendshipUnitEntity" resultMap="resultListFriendshipLink" >
	   select ID,Name,Logo,URL,Introduction,Statu,Indexs,Opt_Id,CreateTime ,Opt_Date 
	   from  FriendShip_Link where  Name=#{name}   and ID!=#{id} 
    </select> 
    <!-- 修改友情链接信息 -->  
	<update id="updateFriendShipLinkByID"  parameterType="cn.springmvc.model.FriendshipUnitEntity">
	   update  FriendShip_Link  
	   <set>
		   <if test="name != null" >
	         Name=#{name},
	       </if> 
	       <if test="logo != null" >
	         Logo=#{logo},
	       </if> 
	       <if test="url != null" >
	         URL=#{url},
	       </if> 
	       <if test="introduction != null" >
	         Introduction=#{introduction},
	       </if>  
	       <if test="indexs != null" >
	         Indexs=#{indexs},
	       </if> 
	        <if test="optId !=0" >
	          Opt_Id=#{optId},
	        </if> 
	         Opt_Date=now(), 
	       </set>   
	   where ID=#{id}   
    </update>   
    <!-- 删除友情链接信息 -->  
	<delete id="deleteFriendShipLinkByID"  parameterType="int">
	   delete from  FriendShip_Link where ID=#{id}   
    </delete>    
     <!-- 停用或启用友情链接 -->  
	<update id="updateFriendShipLinkStatuByID"  parameterType="cn.springmvc.model.FriendshipUnitEntity">
	   update  FriendShip_Link  set   Statu=#{statu} where ID=#{id}   
    </update> 
     <!-- 根据id查询友情链接 -->  
	<select id="selectFriendShipLinkByID" parameterType="cn.springmvc.model.FriendshipUnitEntity"   resultMap="resultListFriendshipLink">
	   select fl.ID,fl.Name,fl.Logo,fl.URL,fl.Introduction,fl.Statu,fl.Indexs,fl.Opt_Id,
	   fl.CreateTime,fl.Opt_Date 
	   from  FriendShip_Link where  fl.ID=#{id}  
    </select>   
     <!-- 查询友情链接列表 -->  
	<select id="selectFriendShipLinkfront"  resultMap="resultListFriendshipLink">
	   select fl.ID,fl.Name,fl.Logo,fl.URL,fl.Introduction,fl.Statu,fl.Indexs,fl.Opt_Id,
	   fl.CreateTime,fl.Opt_Date 
	   from  FriendShip_Link  fl  
	   where  fl.Statu = 1
    </select>                   
</mapper>   